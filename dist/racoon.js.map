{"version":3,"file":"racoon.js","sources":["../lib/utils/is.js","../lib/utils/constants.js","../lib/utils/validate-error.js","../lib/restricts/base.js","../lib/restricts/number-type.js","../lib/restricts/number-required.js","../lib/restricts/enum.js","../lib/restricts/number-max.js","../lib/restricts/number-min.js","../lib/restricts/number-int.js","../lib/restricts/required.js","../lib/restricts/custom.js","../lib/type/base.js","../lib/type/number.js","../lib/restricts/string-type.js","../lib/restricts/length-max.js","../lib/restricts/length-min.js","../lib/restricts/string-pattern.js","../lib/type/string.js","../lib/restricts/boolean-type.js","../lib/type/boolean.js","../lib/restricts/any-type.js","../lib/restricts/any-required.js","../lib/type/any.js","../lib/restricts/object-type.js","../lib/type/object.js","../lib/restricts/array-type.js","../lib/type/arrary.js","../lib/index.js"],"sourcesContent":["export const toString = Object.prototype.toString;\n\nexport function getType(val) {\n  const str = toString.call(val);\n  return str.substring(8, str.length - 1);\n}\n\nexport function isUndefined(val) {\n  return getType(val) === 'Undefined';\n}\n\nexport function isNull(val) {\n  return val === null;\n}\n\nexport function isNaN(val) {\n  return val !== val;\n}\n\nexport function isNotRequired(val) {\n  return isUndefined(val) || isNull(val);\n}\n\nexport function isFalsy(val) {\n  return !val;\n}\n\nexport function isEmpty(val) {\n  const type = getType(val);\n  if (type === 'Object') {\n    return Object.keys(val).length === 0;\n  }\n  if (type === 'Array' || type === 'Arguments') {\n    return val.length === 0;\n  }\n  return isFalsy(val);\n}\n\nexport function isEmptyObject(val) {\n  if (getType(val) === 'Object') {\n    return Object.keys(val).length === 0;\n  }\n  return false;\n}\n\nexport function isEmptyArray(val) {\n  if (getType(val) === 'Array') {\n    return val.length === 0;\n  }\n  return false;\n}\n\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\nexport function isInt(val) {\n  if (isNumber(val) === false) {\n    return false;\n  }\n  return Math.floor(val) === val;\n}\n\nexport function isInfinity(val) {\n  return isNumber(val) && isNaN(val) === false && Number.isFinite(val) === false;\n}\n\nexport function isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\nexport function isRegExp(val) {\n  return val instanceof RegExp;\n}\n\nexport function isObject(val) {\n  return getType(val) === 'Object';\n}\n\nexport function isArray(val) {\n  return Array.isArray(val);\n}\n\nexport function isFunction(val) {\n  return getType(val) === 'Function';\n}\n\nexport function getKeyStr(keyChain) {\n  const propReg = /^[_$a-z][_$a-z\\d]*$/i;\n  let result = '';\n  for (let i = 0; i < keyChain.length; i += 1) {\n    const { type, key } = keyChain[i];\n    if (type === 'prop' && propReg.test(key)) {\n      if (result) {\n        result += `.${key}`;\n      } else {\n        result += key;\n      }\n    } else if (type === 'prop') {\n      result += `['${key}']`;\n    } else if (type === 'index') {\n      result += `[${key}]`;\n    }\n  }\n  return result;\n}\n","export const TYPE = {\n  number: 'number',\n  string: 'string',\n  boolean: 'boolean',\n  object: 'object',\n  array: 'array',\n  any: 'any'\n};\n","export default class ValidateError extends Error {\n  noKeyChain = false;\n  final = false;\n\n  constructor(message, options = {}) {\n    super(message);\n    const {\n      noKeyChain = false,\n      final = false,\n      custom = false\n    } = options;\n    this.noKeyChain = noKeyChain;\n    this.final = final;\n    this.custom = custom;\n  }\n\n  toString() {\n    return `Validate${super.toString()}`;\n  }\n}\n","import { isFunction, isString } from '../utils/is';\nimport ValidateError from '../utils/validate-error';\n\nexport default class RestrictBase {\n  errorConfig = {\n    message: '',\n    ctx: null\n  }\n\n  setErrorMessage(message, ctx) {\n    this.errorConfig = {\n      message,\n      ctx,\n    };\n  }\n\n  getError(originMessage) {\n    const { message, ctx } = this.errorConfig;\n    if (isFunction(message)) {\n      return new ValidateError(\n        message.call(ctx, originMessage),\n        { noKeyChain: true, custom: true }\n      );\n    }\n    if (isString(message) && message) {\n      return new ValidateError(message, { noKeyChain: true, custom: true });\n    }\n    return new ValidateError(originMessage);\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isNaN,\n  isNumber,\n  isUndefined,\n  isNull,\n  isInfinity\n} from '../utils/is';\n\nexport default class RestrictNumberType extends RestrictBase {\n  isAllowNaN = false;\n  isAllowInfinity = false;\n\n  enableAllowNaN() {\n    this.isAllowNaN = true;\n  }\n\n  enableAllowInfinity() {\n    this.isAllowInfinity = true;\n  }\n\n  validate(val) {\n    const { isAllowNaN, isAllowInfinity } = this;\n    if (isNaN(val) && isAllowNaN === false) {\n      throw this.getError('value is not allowed to be NaN');\n    }\n    if (isInfinity(val) && isAllowInfinity === false) {\n      throw this.getError('value is not allowed to be Infinity');\n    }\n    if (isNumber(val) || isUndefined(val) || isNull(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof number');\n  }\n}\n","import RestrictBase from './base';\nimport { isNaN, isNotRequired } from '../utils/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  validate(val) {\n    if (isNotRequired(val)) {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n    if (isNaN(val)) {\n      throw this.getError('value is required and should not be NaN');\n    }\n    return true;\n  }\n}\n","import RestrictBase from './base';\n\nexport default class RestrictEnum extends RestrictBase {\n  enumValues = null;\n\n  constructor(...values) {\n    super();\n    if (values.length === 0) {\n      throw new RangeError('enum arguments can not be empty');\n    }\n    this.enumValues = values;\n  }\n\n  get valueStr() {\n    return JSON.stringify(this.enumValues);\n  }\n\n  validate(val) {\n    if (this.enumValues.indexOf(val) > -1) {\n      return true;\n    }\n    throw this.getError(`value should be one of ${this.valueStr}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictNumberMax extends RestrictBase {\n  constructor(max, closed) {\n    super();\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be typeof number');\n    }\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed === false) {\n      if (val < this.max) {\n        return true;\n      }\n      throw this.getError(`value should less than ${this.max}`);\n    }\n\n    if (val <= this.max) {\n      return true;\n    }\n    throw this.getError(`value should less than or equal ${this.max}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictNumberMin extends RestrictBase {\n  constructor(min, closed) {\n    super();\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed === false) {\n      if (val > this.min) {\n        return true;\n      }\n      throw this.getError(`value should greater than ${this.min}`);\n    }\n\n    if (val >= this.min) {\n      return true;\n    }\n    throw this.getError(`value should greater than or equal ${this.min}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isInt } from '../utils/is';\n\nexport default class RestrictNumberInt extends RestrictBase {\n  validate(val) {\n    if (isInt(val)) {\n      return true;\n    }\n    throw this.getError('value should be an int');\n  }\n}\n","import RestrictBase from './base';\nimport { isEmpty, isNotRequired } from '../utils/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  strict = false;\n\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  validate(val) {\n    const { strict } = this;\n    if (strict === true) {\n      if (isEmpty(val)) {\n        throw this.getError('value is required and should not be empty');\n      }\n      return true;\n    }\n    if (isNotRequired(val)) {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n    return true;\n  }\n}\n","import { isFunction, isString } from '../utils/is';\nimport RestrictBase from './base';\n\nexport default class RestrictCustom extends RestrictBase {\n  constructor(restrictFn, ctx) {\n    super();\n    if (isFunction(restrictFn) === false) {\n      throw new TypeError('`custom` must receive a Function parameter');\n    }\n    this.restrictFn = restrictFn;\n    this.ctx = ctx;\n  }\n\n  validate(val) {\n    try {\n      const result = this.restrictFn.call(this.ctx, val);\n      if (isString(result) && result) {\n        throw this.getError(result);\n      }\n    } catch (error) {\n      throw this.getError(error.message);\n    }\n    return true;\n  }\n}\n","import {\n  isEmpty,\n  isNotRequired,\n  isNaN,\n  isString,\n  isFunction\n} from '../utils/is';\nimport ValidateError from '../utils/validate-error';\nimport RestrictRequired from '../restricts/required';\nimport RestrictCustom from '../restricts/custom';\n\nexport default class TypeBase {\n  restricts = [];\n  typeRestrict = null;\n  requiredRestrict = null;\n  currentRestrict = null;\n  defaultConfig = {\n    enable: false,\n    strict: false,\n    value: undefined\n  };\n  formatterConfig = {\n    ctx: undefined,\n    formatter: val => val\n  };\n  errorForAllConfig = {\n    enable: false,\n    ctx: undefined,\n    message: ''\n  };\n\n  required(strict = false) {\n    this.requiredRestrict = new RestrictRequired(strict);\n    this.currentRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  custom(restrictFn, ctx) {\n    const restrict = new RestrictCustom(restrictFn, ctx);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  error(message, ctx) {\n    this.currentRestrict.setErrorMessage(message, ctx);\n    return this;\n  }\n\n  errorForAll(message, ctx) {\n    this.errorForAllConfig = {\n      enable: true,\n      message,\n      ctx\n    };\n    return this;\n  }\n\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('`default` args can not be empty');\n    }\n    const [value, strict, ctx] = args;\n    Object.assign(this.defaultConfig, {\n      enable: true,\n      strict: strict === true,\n      value,\n      ctx\n    });\n    return this;\n  }\n\n  format(formatter, ctx) {\n    if (typeof formatter !== 'function') {\n      throw new TypeError('`format` argument should be a function');\n    }\n    this.formatterConfig = {\n      ctx,\n      formatter\n    };\n    return this;\n  }\n\n  calcDefaultValue(val) {\n    const { value, ctx } = this.defaultConfig;\n    if (typeof value === 'function') {\n      return value.call(ctx, val);\n    }\n    return value;\n  }\n\n  getReturnValueWithStrict(val) {\n    const { enable, strict } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n    if (enable && (isNotRequired(val) || isNaN(val))) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    if (enable && isEmpty(val) && strict) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    return formatter.call(ctx, val);\n  }\n\n  getReturnValue(val) {\n    const { formatter, ctx } = this.formatterConfig;\n    if (this.defaultConfig.enable && (isNotRequired(val) || isNaN(val))) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    return formatter.call(ctx, val);\n  }\n\n  getErrorForAll(originalMessage) {\n    const {\n      enable,\n      ctx,\n      message\n    } = this.errorForAllConfig;\n    if (enable !== true) {\n      return null;\n    }\n    if (isString(message) && message) {\n      return new ValidateError(message);\n    }\n    if (isFunction(message)) {\n      return new ValidateError(\n        message.call(ctx, originalMessage)\n      );\n    }\n    return null;\n  }\n\n  checkType(val) {\n    return this.typeRestrict.validate(val);\n  }\n\n  checkRequired(val) {\n    if (!this.requiredRestrict) {\n      return true;\n    }\n\n    return this.requiredRestrict.validate(val);\n  }\n\n  checkRestricts(val) {\n    for (let i = 0; i < this.restricts.length; i += 1) {\n      this.restricts[i].validate(val);\n    }\n    return true;\n  }\n\n  validate(val) {\n    if (!this.requiredRestrict && isNotRequired(val)) {\n      return this.getReturnValue(val);\n    }\n    try {\n      this.checkType(val);\n      this.checkRequired(val);\n      this.checkRestricts(val);\n\n      return this.getReturnValue(val);\n    } catch (error) {\n      if (error.custom === true) {\n        throw error;\n      }\n      const errorForAll = this.getErrorForAll(error.message);\n      if (errorForAll) {\n        throw errorForAll;\n      }\n      throw error;\n    }\n  }\n\n  validateSilent(val) {\n    try {\n      return {\n        value: this.validate(val)\n      };\n    } catch (error) {\n      return {\n        error,\n        value: val\n      };\n    }\n  }\n}\n","import {\n  isNaN,\n  isNotRequired\n} from '../utils/is';\nimport { TYPE } from '../utils/constants';\nimport RestrictNumberType from '../restricts/number-type';\nimport RestrictNumberRequired from '../restricts/number-required';\nimport RestrictEnum from '../restricts/enum';\nimport RestrictNumberMax from '../restricts/number-max';\nimport RestrictNumberMin from '../restricts/number-min';\nimport RestrictNumberInt from '../restricts/number-int';\nimport TypeBase from './base';\n\nconst NUMBER_REG = /^[+-]?\\d*\\.?\\d*$/;\n\nexport default class TypeNumber extends TypeBase {\n  type = TYPE.number;\n  isAllowString = false;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictNumberType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  getReturnValue(val) {\n    const { enable } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n    if (\n      enable\n      && (isNotRequired(val) || isNaN(val))\n    ) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    return formatter.call(ctx, val);\n  }\n\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('`default` args can not be empty');\n    }\n    const [value, ctx] = args;\n    Object.assign(this.defaultConfig, {\n      enable: true,\n      strict: false,\n      value,\n      ctx\n    });\n    return this;\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  required() {\n    this.requiredRestrict = new RestrictNumberRequired();\n    this.currentRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  allowNaN() {\n    this.typeRestrict.enableAllowNaN();\n    return this;\n  }\n\n  allowInfinity() {\n    this.typeRestrict.enableAllowInfinity();\n    return this;\n  }\n\n  allowString() {\n    this.isAllowString = true;\n    return this;\n  }\n\n  min(min, closed = true) {\n    const restrict = new RestrictNumberMin(min, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  max(max, closed = true) {\n    const restrict = new RestrictNumberMax(max, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  int() {\n    const restrict = new RestrictNumberInt();\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  validate(val) {\n    if (this.isAllowString && NUMBER_REG.test(val)) {\n      val = Number(val);\n    }\n    return super.validate(val);\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isString,\n  isNotRequired\n} from '../utils/is';\n\nexport default class RestrictStringType extends RestrictBase {\n  validate(val) {\n    if (isString(val) || isNotRequired(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof string');\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictLengthMax extends RestrictBase {\n  constructor(max, closed) {\n    super();\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be typeof number');\n    }\n\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed) {\n      if (val.length <= this.max) {\n        return true;\n      }\n      throw this.getError(`value length should less than or equal ${this.max}`);\n    }\n    if (val.length < this.max) {\n      return true;\n    }\n    throw this.getError(`value length should less than ${this.max}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictLengthMin extends RestrictBase {\n  constructor(min, closed) {\n    super();\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed) {\n      if (val.length >= this.min) {\n        return true;\n      }\n      throw this.getError(`value length should greater than or equal ${this.min}`);\n    }\n    if (val.length > this.min) {\n      return true;\n    }\n    throw this.getError(`value length should greater than ${this.min}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isRegExp } from '../utils/is';\n\nexport default class RestrictStringPattern extends RestrictBase {\n  constructor(pattern) {\n    super();\n    if (isRegExp(pattern) === false) {\n      throw new TypeError('pattern should be a RegExp');\n    }\n    this.pattern = pattern;\n  }\n\n  validate(val) {\n    if (this.pattern.test(val)) {\n      return true;\n    }\n    throw this.getError(`value should match pattern ${this.pattern.toString()}`);\n  }\n}\n","import { TYPE } from '../utils/constants';\nimport RestrictStringType from '../restricts/string-type';\nimport RestrictEnum from '../restricts/enum';\nimport RestrictLengthMax from '../restricts/length-max';\nimport RestrictLengthMin from '../restricts/length-min';\nimport RestrictStringPattern from '../restricts/string-pattern';\nimport TypeBase from './base';\n\nexport default class TypeString extends TypeBase {\n  type = TYPE.string;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictStringType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  max(max, closed = true) {\n    const restrict = new RestrictLengthMax(max, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  min(min, closed = true) {\n    const restrict = new RestrictLengthMin(min, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  pattern(pattern) {\n    const restrict = new RestrictStringPattern(pattern);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isBoolean,\n  isNotRequired\n} from '../utils/is';\n\nexport default class RestrictBooleanType extends RestrictBase {\n  validate(val) {\n    if (isBoolean(val) || isNotRequired(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof boolean');\n  }\n}\n","import { TYPE } from '../utils/constants';\nimport RestrictBooleanType from '../restricts/boolean-type';\nimport RestrictEnum from '../restricts/enum';\nimport TypeBase from './base';\n\nexport default class TypeBoolean extends TypeBase {\n  type = TYPE;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictBooleanType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('`default` args can not be empty');\n    }\n    const [value, ctx] = args;\n    Object.assign(this.defaultConfig, {\n      enable: true,\n      strict: false,\n      value,\n      ctx\n    });\n    return this;\n  }\n}\n","import RestrictBase from './base';\n\nexport default class RestrictAnyType extends RestrictBase {\n  validate(val) {\n    return true;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isNaN,\n  isNotRequired,\n  isEmptyObject,\n  isEmptyArray\n} from '../utils/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  strict = false;\n\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  validate(val) {\n    const { strict } = this;\n    if (strict === true) {\n      if (\n        isNotRequired(val)\n        || val === ''\n        || isNaN(val)\n        || isEmptyObject(val)\n        || isEmptyArray(val)\n      ) {\n        throw this.getError('value is required and should not be empty');\n      }\n      return true;\n    }\n    if (isNotRequired(val) || isNaN(val)) {\n      throw this.getError('value is required and should not be undefined/null/NaN');\n    }\n    return true;\n  }\n}\n","import { TYPE } from '../utils/constants';\nimport RestrictAnyType from '../restricts/any-type';\nimport RestrictAnyRequired from '../restricts/any-required';\nimport RestrictEnum from '../restricts/enum';\nimport TypeBase from './base';\n\nexport default class TypeAny extends TypeBase {\n  type = TYPE.any;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictAnyType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  required(strict = false) {\n    this.requiredRestrict = new RestrictAnyRequired(strict);\n    this.currentRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isObject,\n  isUndefined,\n  isNull\n} from '../utils/is';\n\nexport default class RestrictObjectType extends RestrictBase {\n  validate(val) {\n    if (isObject(val) || isUndefined(val) || isNull(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof object');\n  }\n}\n","import {\n  isObject,\n  isNotRequired,\n  getKeyStr,\n} from '../utils/is';\nimport { TYPE } from '../utils/constants';\nimport RestrictObjectType from '../restricts/object-type';\nimport ValidateError from '../utils/validate-error';\nimport TypeBase from './base';\n\nexport default class TypeObject extends TypeBase {\n  type = TYPE.object;\n  config = null;\n  isStripUnknown = false;\n  isAllowUnknown = false;\n\n  constructor(config) {\n    super();\n    this.typeRestrict = new RestrictObjectType();\n    this.currentRestrict = this.typeRestrict;\n    if (isObject(config)) {\n      const pureConfig = Object.create(null);\n      Object.keys(config).forEach(key => {\n        if (config[key] instanceof TypeBase) {\n          pureConfig[key] = config[key];\n        }\n      });\n      this.config = pureConfig;\n    }\n  }\n\n  get keys() {\n    return Object.keys(this.config);\n  }\n\n  hasKey(key) {\n    return this.keys.includes(key);\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  stripUnknown() {\n    this.isStripUnknown = true;\n    return this;\n  }\n\n  allowUnknown() {\n    this.isAllowUnknown = true;\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {Object} obj - object to validate\n   * @param {Array} [keyChain=[]] - object props chain\n   * @returns {Object} - result of validate\n   */\n  validateRecurse(obj, keyChain) {\n    keyChain = keyChain || [];\n\n    if (this.config === null) {\n      return obj;\n    }\n\n    const result = {};\n    let keys;\n    if (this.isStripUnknown === true) {\n      keys = this.keys;\n    } else {\n      keys = Object.keys(obj);\n    }\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      const schema = this.config[key];\n      if (this.hasKey(key) === false) {\n        if (this.isAllowUnknown === true) {\n          result[key] = obj[key];\n          continue;\n        }\n        throw new ValidateError(`the key \\`${key}\\` is not allowed`);\n      }\n\n      try {\n        if (schema.type === TYPE.object || schema.type === TYPE.array) {\n          result[key] = schema.validateRecurse(\n            obj[key],\n            [\n              ...keyChain,\n              {\n                key,\n                type: 'prop'\n              }\n            ]\n          );\n        } else {\n          result[key] = schema.validate(obj[key]);\n        }\n      } catch (error) {\n        if (error.final) {\n          throw error;\n        }\n        if (error.noKeyChain) {\n          throw new ValidateError(error.message, { final: true });\n        }\n        let keyChainStr = getKeyStr([...keyChain, { type: 'prop', key }]);\n        keyChainStr = `\"${keyChainStr}\": `;\n        throw new ValidateError(`${keyChainStr}${error.message}`, { final: true });\n      }\n    }\n    return result;\n  }\n\n  validate(obj) {\n    if (!this.requiredRestrict && isNotRequired(obj)) {\n      return this.getReturnValue(obj);\n    }\n\n    try {\n      this.checkRequired(obj);\n      this.checkType(obj);\n      this.checkRestricts(obj);\n\n      return this.getReturnValue(\n        this.validateRecurse(obj)\n      );\n    } catch (error) {\n      if (error.custom === true) {\n        throw error;\n      }\n      const errorForAll = this.getErrorForAll(error.message);\n      if (errorForAll) {\n        throw errorForAll;\n      }\n      throw error;\n    }\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isArray,\n  isUndefined,\n  isNull\n} from '../utils/is';\n\nexport default class RestrictArrayType extends RestrictBase {\n  validate(val) {\n    if (isArray(val) || isUndefined(val) || isNull(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof array');\n  }\n}\n","import {\n  isNotRequired,\n  getKeyStr,\n} from '../utils/is';\nimport ValidateError from '../utils/validate-error';\nimport { TYPE } from '../utils/constants';\nimport RestrictArrayType from '../restricts/array-type';\nimport RestrictLengthMin from '../restricts/length-min';\nimport RestrictLengthMax from '../restricts/length-max';\nimport TypeBase from './base';\n\nexport default class TypeArray extends TypeBase {\n  type = TYPE.array;\n  itemSchema = null;\n\n  constructor(itemSchema) {\n    super();\n    this.typeRestrict = new RestrictArrayType();\n    this.currentRestrict = this.typeRestrict;\n    if (itemSchema instanceof TypeBase) {\n      this.itemSchema = itemSchema;\n    }\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  min(min, closed = true) {\n    const restrict = new RestrictLengthMin(min, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  max(max, closed = true) {\n    const restrict = new RestrictLengthMax(max, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {Array} array - array to validate\n   * @param {Array} [keyChain=[]] - props key chain\n   * @returns {Array} - result of validate\n   */\n  validateRecurse(array, keyChain) {\n    keyChain = keyChain || [];\n    const { itemSchema } = this;\n\n    if (itemSchema) {\n      const result = [];\n      for (let i = 0; i < array.length; i += 1) {\n        try {\n          if (itemSchema.type === TYPE.array || itemSchema.type === TYPE.object) {\n            result.push(\n              itemSchema.validateRecurse(array[i], [...keyChain, { type: 'index', key: i }])\n            );\n          } else {\n            result.push(\n              itemSchema.validate(array[i])\n            );\n          }\n        } catch (error) {\n          if (error.final) {\n            throw error;\n          }\n          if (error.noKeyChain) {\n            throw new ValidateError(error.message, { final: true });\n          }\n          let keyChainStr = getKeyStr([...keyChain, { type: 'index', key: i }]);\n          keyChainStr = `\"${keyChainStr}\": `;\n          throw new ValidateError(`${keyChainStr}${error.message}`, { final: true });\n        }\n      }\n      return result;\n    }\n    return array;\n  }\n\n  validate(array) {\n    if (!this.requiredRestrict && isNotRequired(array)) {\n      return this.getReturnValue(array);\n    }\n\n    try {\n      this.checkRequired(array);\n      this.checkType(array);\n      this.checkRestricts(array);\n\n      return this.getReturnValue(\n        this.validateRecurse(array)\n      );\n    } catch (error) {\n      if (error.custom === true) {\n        throw error;\n      }\n      const errorForAll = this.getErrorForAll(error.message);\n      if (errorForAll) {\n        throw errorForAll;\n      }\n      throw error;\n    }\n  }\n}\n","import {\n  TypeNumber,\n  TypeString,\n  TypeBoolean,\n  TypeAny,\n  TypeObject,\n  TypeArray\n} from './type';\n\nexport function number() {\n  return new TypeNumber();\n}\n\nexport function string() {\n  return new TypeString();\n}\n\nexport function boolean() {\n  return new TypeBoolean();\n}\n\nexport function any() {\n  return new TypeAny();\n}\n\nexport function object(config) {\n  return new TypeObject(config);\n}\n\nexport function array(itemSchema) {\n  return new TypeArray(itemSchema);\n}\n\nexport default {\n  number,\n  string,\n  boolean,\n  any,\n  object,\n  array\n};\n"],"names":["toString","Object","prototype","getType","val","str","call","substring","length","isUndefined","isNull","isNaN","isNotRequired","isFalsy","isEmpty","type","keys","isEmptyObject","isEmptyArray","isString","isNumber","isInt","Math","floor","isInfinity","Number","isFinite","isBoolean","isRegExp","RegExp","isObject","isArray","Array","isFunction","getKeyStr","keyChain","propReg","result","i","key","test","TYPE","number","string","object","array","any","ValidateError","message","options","noKeyChain","final","custom","Error","RestrictBase","errorConfig","ctx","originMessage","RestrictNumberType","isAllowNaN","isAllowInfinity","getError","RestrictRequired","RestrictEnum","enumValues","values","RangeError","indexOf","valueStr","JSON","stringify","RestrictNumberMax","max","closed","TypeError","RestrictNumberMin","min","RestrictNumberInt","strict","RestrictCustom","restrictFn","error","TypeBase","restricts","typeRestrict","requiredRestrict","currentRestrict","defaultConfig","enable","value","undefined","formatterConfig","formatter","errorForAllConfig","restrict","push","setErrorMessage","args","assign","calcDefaultValue","originalMessage","validate","getReturnValue","checkType","checkRequired","checkRestricts","errorForAll","getErrorForAll","NUMBER_REG","TypeNumber","isAllowString","RestrictNumberRequired","enableAllowNaN","enableAllowInfinity","RestrictStringType","RestrictLengthMax","RestrictLengthMin","RestrictStringPattern","pattern","TypeString","getReturnValueWithStrict","RestrictBooleanType","TypeBoolean","RestrictAnyType","TypeAny","RestrictAnyRequired","RestrictObjectType","TypeObject","config","isStripUnknown","isAllowUnknown","pureConfig","create","forEach","includes","obj","schema","hasKey","validateRecurse","keyChainStr","RestrictArrayType","TypeArray","itemSchema","boolean"],"mappings":"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"}