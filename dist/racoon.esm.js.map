{"version":3,"file":"racoon.esm.js","sources":["../lib/utils/is.js","../lib/utils/constants.js","../lib/utils/validate-error.js","../lib/restricts/base.js","../lib/restricts/number-type.js","../lib/restricts/number-required.js","../lib/restricts/enum.js","../lib/restricts/number-max.js","../lib/restricts/number-min.js","../lib/restricts/number-int.js","../lib/restricts/required.js","../lib/restricts/custom.js","../lib/type/base.js","../lib/type/number.js","../lib/restricts/string-type.js","../lib/restricts/length-max.js","../lib/restricts/length-min.js","../lib/restricts/string-pattern.js","../lib/type/string.js","../lib/restricts/boolean-type.js","../lib/type/boolean.js","../lib/restricts/any-type.js","../lib/restricts/any-required.js","../lib/type/any.js","../lib/restricts/object-type.js","../lib/type/object.js","../lib/restricts/array-type.js","../lib/type/arrary.js","../lib/index.js"],"sourcesContent":["export const toString = Object.prototype.toString;\n\nexport function getType(val) {\n  const str = toString.call(val);\n  return str.substring(8, str.length - 1);\n}\n\nexport function isUndefined(val) {\n  return getType(val) === 'Undefined';\n}\n\nexport function isNull(val) {\n  return val === null;\n}\n\nexport function isNaN(val) {\n  return val !== val;\n}\n\nexport function isNotRequired(val) {\n  return isUndefined(val) || isNull(val);\n}\n\nexport function isFalsy(val) {\n  return !val;\n}\n\nexport function isEmpty(val) {\n  const type = getType(val);\n  if (type === 'Object') {\n    return Object.keys(val).length === 0;\n  }\n  if (type === 'Array' || type === 'Arguments') {\n    return val.length === 0;\n  }\n  return isFalsy(val);\n}\n\nexport function isEmptyObject(val) {\n  if (getType(val) === 'Object') {\n    return Object.keys(val).length === 0;\n  }\n  return false;\n}\n\nexport function isEmptyArray(val) {\n  if (getType(val) === 'Array') {\n    return val.length === 0;\n  }\n  return false;\n}\n\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\nexport function isInt(val) {\n  if (isNumber(val) === false) {\n    return false;\n  }\n  return Math.floor(val) === val;\n}\n\nexport function isInfinity(val) {\n  return isNumber(val) && isNaN(val) === false && Number.isFinite(val) === false;\n}\n\nexport function isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\nexport function isRegExp(val) {\n  return val instanceof RegExp;\n}\n\nexport function isObject(val) {\n  return getType(val) === 'Object';\n}\n\nexport function isArray(val) {\n  return Array.isArray(val);\n}\n\nexport function isFunction(val) {\n  return getType(val) === 'Function';\n}\n\nexport function getKeyStr(keyChain) {\n  const propReg = /^[_$a-z][_$a-z\\d]*$/i;\n  let result = '';\n  for (let i = 0; i < keyChain.length; i += 1) {\n    const { type, key } = keyChain[i];\n    if (type === 'prop' && propReg.test(key)) {\n      if (result) {\n        result += `.${key}`;\n      } else {\n        result += key;\n      }\n    } else if (type === 'prop') {\n      result += `['${key}']`;\n    } else if (type === 'index') {\n      result += `[${key}]`;\n    }\n  }\n  return result;\n}\n","export const TYPE = {\n  number: 'number',\n  string: 'string',\n  boolean: 'boolean',\n  object: 'object',\n  array: 'array',\n  any: 'any'\n};\n","export default class ValidateError extends Error {\n  get [Symbol.toStringTag]() {\n    return 'ValidateError';\n  }\n\n  toString() {\n    return `Validate${super.toString()}`;\n  }\n}\n","import { isFunction } from '../utils/is';\nimport ValidateError from '../utils/validate-error';\n\nexport default class RestrictBase {\n  errorConfig = {\n    message: '',\n    ctx: null\n  }\n\n  setErrorMessage(message, ctx) {\n    this.errorConfig = {\n      message,\n      ctx,\n    };\n  }\n\n  getError(originMessage) {\n    const { message, ctx } = this.errorConfig;\n    if (isFunction(message)) {\n      return new ValidateError(\n        message.call(ctx, originMessage)\n      );\n    }\n    return new ValidateError(message || originMessage);\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isNaN,\n  isNumber,\n  isUndefined,\n  isNull,\n  isInfinity\n} from '../utils/is';\n\nexport default class RestrictNumberType extends RestrictBase {\n  isAllowNaN = false;\n  isAllowInfinity = false;\n\n  enableAllowNaN() {\n    this.isAllowNaN = true;\n  }\n\n  enableAllowInfinity() {\n    this.isAllowInfinity = true;\n  }\n\n  validate(val) {\n    const { isAllowNaN, isAllowInfinity } = this;\n    if (isNaN(val) && isAllowNaN === false) {\n      throw this.getError('value is not allowed to be NaN');\n    }\n    if (isInfinity(val) && isAllowInfinity === false) {\n      throw this.getError('value is not allowed to be Infinity');\n    }\n    if (isNumber(val) || isUndefined(val) || isNull(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof number');\n  }\n}\n","import RestrictBase from './base';\nimport { isNaN, isNotRequired } from '../utils/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  validate(val) {\n    if (isNotRequired(val)) {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n    if (isNaN(val)) {\n      throw this.getError('value is required and should not be NaN');\n    }\n    return true;\n  }\n}\n","import RestrictBase from './base';\n\nexport default class RestrictEnum extends RestrictBase {\n  enumValues = null;\n\n  constructor(...values) {\n    super();\n    if (values.length === 0) {\n      throw new RangeError('enum arguments can not be empty');\n    }\n    this.enumValues = values;\n  }\n\n  get valueStr() {\n    return JSON.stringify(this.enumValues);\n  }\n\n  validate(val) {\n    if (this.enumValues.indexOf(val) > -1) {\n      return true;\n    }\n    throw this.getError(`value should be one of ${this.valueStr}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictNumberMax extends RestrictBase {\n  constructor(max, closed = true) {\n    super();\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be typeof number');\n    }\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed === false) {\n      if (val < this.max) {\n        return true;\n      }\n      throw this.getError(`value should less than ${this.max}`);\n    }\n\n    if (val <= this.max) {\n      return true;\n    }\n    throw this.getError(`value should less than or equal ${this.max}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictNumberMin extends RestrictBase {\n  constructor(min, closed = true) {\n    super();\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed === false) {\n      if (val > this.min) {\n        return true;\n      }\n      throw this.getError(`value should greater than ${this.min}`);\n    }\n\n    if (val >= this.min) {\n      return true;\n    }\n    throw this.getError(`value should greater than or equal ${this.min}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isInt } from '../utils/is';\n\nexport default class RestrictNumberInt extends RestrictBase {\n  validate(val) {\n    if (isInt(val)) {\n      return true;\n    }\n    throw this.getError('value should be an int');\n  }\n}\n","import RestrictBase from './base';\nimport { isEmpty, isNotRequired } from '../utils/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  strict = false;\n\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  validate(val) {\n    const { strict } = this;\n    if (strict === true) {\n      if (isEmpty(val)) {\n        throw this.getError('value is required and should not be empty');\n      }\n      return true;\n    }\n    if (isNotRequired(val)) {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n    return true;\n  }\n}\n","import { isFunction } from '../utils/is';\nimport RestrictBase from './base';\n\nexport default class RestrictCustom extends RestrictBase {\n  constructor(restrictFn, ctx) {\n    super();\n    if (isFunction(restrictFn) === false) {\n      throw new TypeError('`custom` must receive a Function parameter');\n    }\n    this.restrictFn = restrictFn;\n    this.ctx = ctx;\n  }\n\n  validate(val) {\n    try {\n      this.restrictFn.call(this.ctx, val);\n    } catch (error) {\n      throw this.getError(error.message);\n    }\n    return true;\n  }\n}\n","import {\n  isEmpty,\n  isNotRequired,\n  isNaN\n} from '../utils/is';\nimport RestrictRequired from '../restricts/required';\nimport RestrictCustom from '../restricts/custom';\n\nexport default class TypeBase {\n  restricts = [];\n  typeRestrict = null;\n  requiredRestrict = null;\n  currentRestrict = null;\n  defaultConfig = {\n    enable: false,\n    strict: false,\n    value: undefined\n  };\n  formatterConfig = {\n    ctx: undefined,\n    formatter: val => val\n  };\n\n  required(strict = false) {\n    this.requiredRestrict = new RestrictRequired(strict);\n    this.currentRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  custom(restrictFn, ctx) {\n    const restrict = new RestrictCustom(restrictFn, ctx);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  error(message, ctx) {\n    this.currentRestrict.setErrorMessage(message, ctx);\n    return this;\n  }\n\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('`default` args can not be empty');\n    }\n    const [value, strict, ctx] = args;\n    Object.assign(this.defaultConfig, {\n      enable: true,\n      strict: strict === true,\n      value,\n      ctx\n    });\n    return this;\n  }\n\n  format(formatter, ctx) {\n    if (typeof formatter !== 'function') {\n      throw new TypeError('`format` argument should be a function');\n    }\n    this.formatterConfig = {\n      ctx,\n      formatter\n    };\n    return this;\n  }\n\n  calcDefaultValue(val) {\n    const { value, ctx } = this.defaultConfig;\n    if (typeof value === 'function') {\n      return value.call(ctx, val);\n    }\n    return value;\n  }\n\n  getReturnValueWithStrict(val) {\n    const { enable, strict } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n    if (enable && (isNotRequired(val) || isNaN(val))) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    if (enable && isEmpty(val) && strict) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    return formatter.call(ctx, val);\n  }\n\n  getReturnValue(val) {\n    const { formatter, ctx } = this.formatterConfig;\n    if (this.defaultConfig.enable && (isNotRequired(val) || isNaN(val))) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    return formatter.call(ctx, val);\n  }\n\n  checkType(val) {\n    return this.typeRestrict.validate(val);\n  }\n\n  checkRequired(val) {\n    if (!this.requiredRestrict) {\n      return true;\n    }\n\n    return this.requiredRestrict.validate(val);\n  }\n\n  checkRestricts(val) {\n    for (let i = 0; i < this.restricts.length; i += 1) {\n      this.restricts[i].validate(val);\n    }\n    return true;\n  }\n\n  validate(val) {\n    if (!this.requiredRestrict && isNotRequired(val)) {\n      return this.getReturnValue(val);\n    }\n    this.checkType(val);\n    this.checkRequired(val);\n    this.checkRestricts(val);\n\n    return this.getReturnValue(val);\n  }\n\n  validateSilent(val) {\n    try {\n      return {\n        value: this.validate(val)\n      };\n    } catch (error) {\n      return {\n        error,\n        value: val\n      };\n    }\n  }\n}\n","import {\n  isNaN,\n  isNotRequired\n} from '../utils/is';\nimport { TYPE } from '../utils/constants';\nimport RestrictNumberType from '../restricts/number-type';\nimport RestrictNumberRequired from '../restricts/number-required';\nimport RestrictEnum from '../restricts/enum';\nimport RestrictNumberMax from '../restricts/number-max';\nimport RestrictNumberMin from '../restricts/number-min';\nimport RestrictNumberInt from '../restricts/number-int';\nimport TypeBase from './base';\n\nexport default class TypeNumber extends TypeBase {\n  type = TYPE.number;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictNumberType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  getReturnValue(val) {\n    const { enable } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n    if (\n      enable\n      && (isNotRequired(val) || isNaN(val))\n    ) {\n      return formatter.call(\n        ctx,\n        this.calcDefaultValue(val)\n      );\n    }\n    return formatter.call(ctx, val);\n  }\n\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('`default` args can not be empty');\n    }\n    const [value, ctx] = args;\n    Object.assign(this.defaultConfig, {\n      enable: true,\n      strict: false,\n      value,\n      ctx\n    });\n    return this;\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  required() {\n    this.requiredRestrict = new RestrictNumberRequired();\n    this.currentRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  allowNaN() {\n    this.typeRestrict.enableAllowNaN();\n    return this;\n  }\n\n  allowInfinity() {\n    this.typeRestrict.enableAllowInfinity();\n    return this;\n  }\n\n  min(min, closed = true) {\n    const restrict = new RestrictNumberMin(min, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  max(max, closed = true) {\n    const restrict = new RestrictNumberMax(max, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  int() {\n    const restrict = new RestrictNumberInt();\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isString,\n  isNotRequired\n} from '../utils/is';\n\nexport default class RestrictStringType extends RestrictBase {\n  validate(val) {\n    if (isString(val) || isNotRequired(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof string');\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictLengthMax extends RestrictBase {\n  constructor(max, closed = true) {\n    super();\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be typeof number');\n    }\n\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed) {\n      if (val.length <= this.max) {\n        return true;\n      }\n      throw this.getError(`value length should less than or equal ${this.max}`);\n    }\n    if (val.length < this.max) {\n      return true;\n    }\n    throw this.getError(`value length should less than ${this.max}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isNumber } from '../utils/is';\n\nexport default class RestrictLengthMin extends RestrictBase {\n  constructor(min, closed = true) {\n    super();\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  validate(val) {\n    if (this.closed) {\n      if (val.length >= this.min) {\n        return true;\n      }\n      throw this.getError(`value length should greater than or equal ${this.min}`);\n    }\n    if (val.length > this.min) {\n      return true;\n    }\n    throw this.getError(`value length should greater than ${this.min}`);\n  }\n}\n","import RestrictBase from './base';\nimport { isRegExp } from '../utils/is';\n\nexport default class RestrictStringPattern extends RestrictBase {\n  constructor(pattern) {\n    super();\n    if (isRegExp(pattern) === false) {\n      throw new TypeError('pattern should be a RegExp');\n    }\n    this.pattern = pattern;\n  }\n\n  validate(val) {\n    if (this.pattern.test(val)) {\n      return true;\n    }\n    throw this.getError(`value should match pattern ${this.pattern.toString()}`);\n  }\n}\n","import { TYPE } from '../utils/constants';\nimport RestrictStringType from '../restricts/string-type';\nimport RestrictEnum from '../restricts/enum';\nimport RestrictLengthMax from '../restricts/length-max';\nimport RestrictLengthMin from '../restricts/length-min';\nimport RestrictStringPattern from '../restricts/string-pattern';\nimport TypeBase from './base';\n\nexport default class TypeString extends TypeBase {\n  type = TYPE.string;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictStringType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  max(max, closed = true) {\n    const restrict = new RestrictLengthMax(max, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  min(min, closed = true) {\n    const restrict = new RestrictLengthMin(min, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  pattern(pattern) {\n    const restrict = new RestrictStringPattern(pattern);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isBoolean,\n  isNotRequired\n} from '../utils/is';\n\nexport default class RestrictBooleanType extends RestrictBase {\n  validate(val) {\n    if (isBoolean(val) || isNotRequired(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof boolean');\n  }\n}\n","import { TYPE } from '../utils/constants';\nimport RestrictBooleanType from '../restricts/boolean-type';\nimport RestrictEnum from '../restricts/enum';\nimport TypeBase from './base';\n\nexport default class TypeBoolean extends TypeBase {\n  type = TYPE;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictBooleanType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('`default` args can not be empty');\n    }\n    const [value, ctx] = args;\n    Object.assign(this.defaultConfig, {\n      enable: true,\n      strict: false,\n      value,\n      ctx\n    });\n    return this;\n  }\n}\n","import RestrictBase from './base';\n\nexport default class RestrictAnyType extends RestrictBase {\n  validate(val) {\n    return true;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isNaN,\n  isNotRequired,\n  isEmptyObject,\n  isEmptyArray\n} from '../utils/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  strict = false;\n\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  validate(val) {\n    const { strict } = this;\n    if (strict === true) {\n      if (\n        isNotRequired(val)\n        || val === ''\n        || isNaN(val)\n        || isEmptyObject(val)\n        || isEmptyArray(val)\n      ) {\n        throw this.getError('value is required and should not be empty');\n      }\n      return true;\n    }\n    if (isNotRequired(val) || isNaN(val)) {\n      throw this.getError('value is required and should not be undefined/null/NaN');\n    }\n    return true;\n  }\n}\n","import { TYPE } from '../utils/constants';\nimport RestrictAnyType from '../restricts/any-type';\nimport RestrictAnyRequired from '../restricts/any-required';\nimport RestrictEnum from '../restricts/enum';\nimport TypeBase from './base';\n\nexport default class TypeAny extends TypeBase {\n  type = TYPE.any;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictAnyType();\n    this.currentRestrict = this.typeRestrict;\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  required(strict = false) {\n    this.requiredRestrict = new RestrictAnyRequired(strict);\n    this.currentRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isObject,\n  isUndefined,\n  isNull\n} from '../utils/is';\n\nexport default class RestrictObjectType extends RestrictBase {\n  validate(val) {\n    if (isObject(val) || isUndefined(val) || isNull(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof object');\n  }\n}\n","import {\n  isObject,\n  isNotRequired,\n  getKeyStr,\n} from '../utils/is';\nimport { TYPE } from '../utils/constants';\nimport RestrictObjectType from '../restricts/object-type';\nimport ValidateError from '../utils/validate-error';\nimport TypeBase from './base';\n\nexport default class TypeObject extends TypeBase {\n  type = TYPE.object;\n  config = null;\n  isStripUnknown = false;\n  isAllowUnknown = false;\n\n  constructor(config) {\n    super();\n    this.typeRestrict = new RestrictObjectType();\n    this.currentRestrict = this.typeRestrict;\n    if (isObject(config)) {\n      const pureConfig = Object.create(null);\n      Object.keys(config).forEach(key => {\n        if (config[key] instanceof TypeBase) {\n          pureConfig[key] = config[key];\n        }\n      });\n      this.config = pureConfig;\n    }\n  }\n\n  get keys() {\n    return Object.keys(this.config);\n  }\n\n  hasKey(key) {\n    return this.keys.includes(key);\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  stripUnknown() {\n    this.isStripUnknown = true;\n    return this;\n  }\n\n  allowUnknown() {\n    this.isAllowUnknown = true;\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {Object} obj - object to validate\n   * @param {Array} [keyChain=[]] - object props chain\n   * @returns {Object} - result of validate\n   */\n  validateRecurse(obj, keyChain) {\n    keyChain = keyChain || [];\n\n    if (this.config === null) {\n      return obj;\n    }\n\n    const result = {};\n    let keys;\n    if (this.isStripUnknown === true) {\n      keys = this.keys;\n    } else {\n      keys = Object.keys(obj);\n    }\n    for (let i = 0; i < keys.length; i += 1) {\n      const key = keys[i];\n      const schema = this.config[key];\n      if (this.hasKey(key) === false) {\n        if (this.isStripUnknown === true) {\n          continue;\n        }\n        if (this.isAllowUnknown === true) {\n          result[key] = obj[key];\n          continue;\n        }\n        throw new ValidateError(`the key \\`${key}\\` is not allowed`);\n      }\n\n      try {\n        if (schema.type === TYPE.object || schema.type === TYPE.array) {\n          result[key] = schema.validateRecurse(\n            obj[key],\n            [\n              ...keyChain,\n              {\n                key,\n                type: 'prop'\n              }\n            ]\n          );\n        } else {\n          result[key] = schema.validate(obj[key]);\n        }\n      } catch (error) {\n        if (error instanceof ValidateError) {\n          let keyChainStr = getKeyStr([...keyChain, { type: 'prop', key }]);\n          if (keyChainStr) {\n            keyChainStr = `\"${keyChainStr}\": `;\n          }\n          throw new Error(`${keyChainStr}${error.message}`);\n        } else {\n          throw error;\n        }\n      }\n    }\n    return result;\n  }\n\n  validate(obj) {\n    if (!this.requiredRestrict && isNotRequired(obj)) {\n      return this.getReturnValue(obj);\n    }\n    this.checkRequired(obj);\n    this.checkType(obj);\n    this.checkRestricts(obj);\n\n    return this.getReturnValue(\n      this.validateRecurse(obj)\n    );\n  }\n}\n","import RestrictBase from './base';\nimport {\n  isArray,\n  isUndefined,\n  isNull\n} from '../utils/is';\n\nexport default class RestrictArrayType extends RestrictBase {\n  validate(val) {\n    if (isArray(val) || isUndefined(val) || isNull(val)) {\n      return true;\n    }\n    throw this.getError('value should be typeof array');\n  }\n}\n","import {\n  isNotRequired,\n  getKeyStr,\n} from '../utils/is';\nimport ValidateError from '../utils/validate-error';\nimport { TYPE } from '../utils/constants';\nimport RestrictArrayType from '../restricts/array-type';\nimport RestrictLengthMin from '../restricts/length-min';\nimport RestrictLengthMax from '../restricts/length-max';\nimport TypeBase from './base';\n\nexport default class TypeArray extends TypeBase {\n  type = TYPE.array;\n  itemSchema = null;\n\n  constructor(itemSchema) {\n    super();\n    this.typeRestrict = new RestrictArrayType();\n    this.currentRestrict = this.typeRestrict;\n    if (itemSchema instanceof TypeBase) {\n      this.itemSchema = itemSchema;\n    }\n  }\n\n  getReturnValue(val) {\n    return this.getReturnValueWithStrict(val);\n  }\n\n  min(min, closed = true) {\n    const restrict = new RestrictLengthMin(min, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  max(max, closed = true) {\n    const restrict = new RestrictLengthMax(max, closed);\n    this.restricts.push(restrict);\n    this.currentRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {Array} array - array to validate\n   * @param {Array} [keyChain=[]] - props key chain\n   * @returns {Array} - result of validate\n   */\n  validateRecurse(array, keyChain) {\n    keyChain = keyChain || [];\n    const { itemSchema } = this;\n\n    if (itemSchema) {\n      const result = [];\n      for (let i = 0; i < array.length; i += 1) {\n        try {\n          if (itemSchema.type === TYPE.array || itemSchema.type === TYPE.object) {\n            result.push(\n              itemSchema.validateRecurse(array[i], [...keyChain, { type: 'index', key: i }])\n            );\n          } else {\n            result.push(\n              itemSchema.validate(array[i])\n            );\n          }\n        } catch (error) {\n          if (error instanceof ValidateError) {\n            let keyChainStr = getKeyStr([...keyChain, { type: 'index', key: i }]);\n            if (keyChainStr) {\n              keyChainStr = `\"${keyChainStr}\": `;\n            }\n            throw new Error(`${keyChainStr}${error.message}`);\n          } else {\n            throw error;\n          }\n        }\n      }\n      return result;\n    }\n    return array;\n  }\n\n  validate(array) {\n    if (!this.requiredRestrict && isNotRequired(array)) {\n      return this.getReturnValue(array);\n    }\n    this.checkRequired(array);\n    this.checkType(array);\n    this.checkRestricts(array);\n\n    return this.getReturnValue(\n      this.validateRecurse(array)\n    );\n  }\n}\n","import {\n  TypeNumber,\n  TypeString,\n  TypeBoolean,\n  TypeAny,\n  TypeObject,\n  TypeArray\n} from './type';\n\nexport function number() {\n  return new TypeNumber();\n}\n\nexport function string() {\n  return new TypeString();\n}\n\nexport function boolean() {\n  return new TypeBoolean();\n}\n\nexport function any() {\n  return new TypeAny();\n}\n\nexport function object(config) {\n  return new TypeObject(config);\n}\n\nexport function array(itemSchema) {\n  return new TypeArray(itemSchema);\n}\n\nexport default {\n  number,\n  string,\n  boolean,\n  any,\n  object,\n  array\n};\n"],"names":["toString","Object","prototype","getType","val","str","call","substring","length","isUndefined","isNull","isNaN","isNotRequired","isFalsy","isEmpty","type","keys","isEmptyObject","isEmptyArray","isString","isNumber","isInt","Math","floor","isInfinity","Number","isFinite","isBoolean","isRegExp","RegExp","isObject","isArray","Array","isFunction","getKeyStr","keyChain","propReg","result","i","key","test","TYPE","number","string","object","array","any","ValidateError","Symbol","toStringTag","Error","RestrictBase","errorConfig","message","ctx","originMessage","RestrictNumberType","isAllowNaN","isAllowInfinity","getError","RestrictRequired","RestrictEnum","enumValues","values","RangeError","indexOf","valueStr","JSON","stringify","RestrictNumberMax","max","closed","TypeError","RestrictNumberMin","min","RestrictNumberInt","strict","RestrictCustom","restrictFn","error","TypeBase","restricts","typeRestrict","requiredRestrict","currentRestrict","defaultConfig","enable","value","undefined","formatterConfig","formatter","restrict","push","setErrorMessage","args","assign","calcDefaultValue","validate","getReturnValue","checkType","checkRequired","checkRestricts","TypeNumber","RestrictNumberRequired","enableAllowNaN","enableAllowInfinity","RestrictStringType","RestrictLengthMax","RestrictLengthMin","RestrictStringPattern","pattern","TypeString","getReturnValueWithStrict","RestrictBooleanType","TypeBoolean","RestrictAnyType","TypeAny","RestrictAnyRequired","RestrictObjectType","TypeObject","config","isStripUnknown","isAllowUnknown","pureConfig","create","forEach","includes","obj","schema","hasKey","validateRecurse","keyChainStr","RestrictArrayType","TypeArray","itemSchema","boolean"],"mappings":"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"}