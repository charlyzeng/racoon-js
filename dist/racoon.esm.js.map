{"version":3,"file":"racoon.esm.js","sources":["../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../lib/util/constants.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../lib/util/validate-error.js","../lib/util/is.js","../lib/restrict/base.js","../lib/restrict/any-schema.js","../lib/restrict/any-required.js","../lib/restrict/enum.js","../lib/restrict/required.js","../lib/restrict/custom.js","../lib/schema/base.js","../lib/schema/any.js","../lib/restrict/number-schema.js","../lib/restrict/number-required.js","../lib/restrict/number-max.js","../lib/restrict/number-min.js","../lib/restrict/number-int.js","../lib/restrict/number-even.js","../lib/restrict/number-odd.js","../lib/schema/number.js","../lib/restrict/string-schema.js","../lib/restrict/length-max.js","../lib/restrict/length-min.js","../lib/restrict/string-pattern.js","../lib/schema/string.js","../lib/restrict/boolean-schema.js","../lib/schema/boolean.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../lib/util/get-key-str.js","../lib/restrict/object-schema.js","../lib/schema/object.js","../lib/restrict/array-schema.js","../lib/schema/arrary.js","../lib/schema/mixed.js","../lib/index.js"],"sourcesContent":["export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export const TYPE = {\n  number: 'number',\n  string: 'string',\n  boolean: 'boolean',\n  object: 'object',\n  array: 'array',\n  any: 'any',\n};\n\nexport const useKeyChainSymbol = Symbol('#useKeyChainSymbol');\n","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"@babel/runtime/helpers/esm/superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default class ValidateError extends Error {\n  custom = false;\n  final = false;\n\n  constructor(message, options = {}) {\n    super(message);\n    const {\n      custom = false,\n      final = false,\n    } = options;\n\n    this.custom = custom;\n    this.final = final;\n  }\n\n  toString() {\n    return `Validate${super.toString()}`;\n  }\n}\n","import ValidateError from './validate-error';\n\nconst { toString } = Object.prototype;\n\nexport function getType(val) {\n  const str = toString.call(val);\n  return str.substring(8, str.length - 1);\n}\n\nexport function isUndefined(val) {\n  return val === undefined;\n}\n\nexport function isNull(val) {\n  return val === null;\n}\n\nexport function isNaN(val) {\n  return val !== val;\n}\n\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\nexport function isInt(val) {\n  return isNumber(val) && val % 1 === 0;\n}\n\nexport function isInfinity(val) {\n  return (\n    val === Number.POSITIVE_INFINITY\n    || val === Number.NEGATIVE_INFINITY\n  );\n}\n\nexport function isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\nexport function isRegExp(val) {\n  return val instanceof RegExp;\n}\n\nexport function isObject(val) {\n  return getType(val) === 'Object';\n}\n\nexport function isArray(val) {\n  return getType(val) === 'Array';\n}\n\nexport function isNotRequired(val) {\n  return isUndefined(val) || isNull(val);\n}\n\nexport function isEmpty(val) {\n  const type = getType(val);\n\n  if (type === 'Object') {\n    return Object.keys(val).length === 0;\n  }\n\n  if (type === 'Array') {\n    return val.length === 0;\n  }\n\n  return (\n    isNotRequired(val)\n    || isNaN(val)\n    || val === ''\n  );\n}\n\n/**\n * Check if the value is Function. AsyncFunction or GeneratorFunction will\n * return false.\n *\n * @param {*} val The value to check.\n */\nexport function isFunction(val) {\n  return getType(val) === 'Function';\n}\n\n/**\n * Detect string whether can be parsed to number by `Number('xxx')`.\n *\n * Special case:\n * When the detected string is empty or only includes white spaces, the string\n * can be parsed to zero although, but it won't be regarded as a parsable\n * string still.\n *\n * @param {string} val The detected string.\n * @returns {boolean}\n */\nexport function isStringNumber(val) {\n  if (/^\\s*$/.test(val)) {\n    return false;\n  }\n  return !isNaN(Number(val));\n}\n\n/**\n * Check the error is a customed ValidateError.\n *\n * @param {Error} error The error object to check.\n */\nexport function isCustomError(error) {\n  return error instanceof ValidateError && error.custom;\n}\n\n/**\n * Check the error is a final ValidateError.\n *\n * @param {Error} error The error object to check.\n */\nexport function isFinalError(error) {\n  return error instanceof ValidateError && error.final;\n}\n","/**\n * The base class of all restrict.\n */\n\nimport { isFunction, isString } from '../util/is';\nimport ValidateError from '../util/validate-error';\n\nexport default class RestrictBase {\n  // To custom the error message when restrict validate fail. The message field\n  // can be either a string or a function, when it's a function, the ctx field\n  // can specify execute context of message function.\n  errorConfig = {\n    ctx: null,\n    message: '',\n  }\n\n  /**\n   * set errorConfig\n   *\n   * @param {String|Function} message The message of error.\n   * @param {*} [ctx] The execute context when message is a function.\n   */\n  setErrorMessage(message, ctx) {\n    this.errorConfig = {\n      ctx,\n      message,\n    };\n  }\n\n  /**\n   * Get the final error message when validate fail.\n   *\n   * @param {String} originMessage The origin message that throwed by racoon.\n   * @returns {ValidateError}\n   */\n  getError(originMessage) {\n    const { message, ctx } = this.errorConfig;\n\n    if (isFunction(message)) {\n      return new ValidateError(\n        message.call(ctx, originMessage),\n        { custom: true },\n      );\n    }\n\n    if (message && isString(message)) {\n      return new ValidateError(\n        message,\n        { custom: true },\n      );\n    }\n\n    return new ValidateError(originMessage);\n  }\n}\n","/**\n * Restrict value to be any type, which means that it will not\n * restrict the type of value. So, the validate method return\n * true always.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictAnySchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"any-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate() {\n    return true;\n  }\n}\n","/**\n * This is for any schema, to estrict value to be non-empty. By default,\n * non-empty means the detected value cann't be undefined, null. When in\n * strict mode, the detected value cann't be undefined, null, empty-string,\n * empty-object or empty-array.\n */\n\nimport RestrictBase from './base';\nimport {\n  isNaN,\n  isEmpty,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictAnyRequired extends RestrictBase {\n  strict = false;\n\n  /**\n   * @param {Boolean} strict Whether to enable strict mode. By default, strict mode\n   * is disabled. If strict param is passed to exactly true, strict mode will be\n   * enabled.\n   */\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  /**\n   * Check the detected value whether meets this \"any-required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    const { strict } = this;\n\n    // In non-strict mode, if the detected value is undefined, null or NaN, the\n    // validation will be fail.\n    if (!strict && (isNotRequired(val) || isNaN(val))) {\n      throw this.getError('value is required and should not be undefined/null/NaN');\n    }\n\n    if (strict === true && isEmpty(val)) {\n      throw this.getError('value is required and should not be empty');\n    }\n  }\n}\n","/**\n * Restrict value to be some enum values.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictEnum extends RestrictBase {\n  enumValues = null;\n\n  /**\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  constructor(...values) {\n    super();\n\n    if (values.length === 0) {\n      throw new RangeError('enum arguments should not be empty');\n    }\n\n    this.enumValues = values;\n  }\n\n  /**\n   * Check the detected value whether meets this \"enum\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.enumValues.indexOf(val) === -1) {\n      throw this.getError(`value should be one of ${JSON.stringify(this.enumValues)}`);\n    }\n  }\n}\n","/**\n * Restrict the detected value to be non-empty. Non-empty means undefined,\n * null. When in strict mode, non-empty means undefined, null, empty-string,\n * empty-object, empty-array.\n */\n\nimport RestrictBase from './base';\nimport { isEmpty, isNotRequired } from '../util/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  strict = false;\n\n  /**\n   * @param {Boolean} [strict] Whether enable strict mode. By default, the mode\n   * is non-strict. If you pass strict exactly true, it will enable strict mode.\n   */\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  /**\n   * Check the detected value whether meets this \"required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    const { strict } = this;\n\n    if (strict && isEmpty(val)) {\n      throw this.getError('value is required and should not be empty');\n    }\n\n    if (!strict && isNotRequired(val))  {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n  }\n}\n","/**\n * Restrict value by a custom callback function.\n */\n\nimport { isFunction, isString } from '../util/is';\nimport RestrictBase from './base';\n\nexport default class RestrictCustom extends RestrictBase {\n  ctx = null;\n  restrictFn = null;\n\n  /**\n   * If restrictFn throws an error or returns a string, the validation\n   * will be fail. The message of error or the returned string respect\n   * the error message of validation.\n   *\n   * @param {Function} restrictFn The custom restrict callback function.\n   * @param {*}        [ctx]      The exec context of restrictFn.\n   */\n  constructor(restrictFn, ctx) {\n    super();\n\n    if (isFunction(restrictFn) === false) {\n      throw new TypeError('`restrictFn` should be a type of function');\n    }\n\n    this.restrictFn = restrictFn;\n    this.ctx = ctx;\n  }\n\n  /**\n   * Check the detected value whether meets this \"custom\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    try {\n      const result = this.restrictFn.call(this.ctx, val);\n\n      // If restrictFn return a non-empty string, validation will be fail.\n      if (isString(result) && result) {\n        throw this.getError(result);\n      }\n    } catch (error) {\n      // If restrictFn throws an error, validation will be fail too. And\n      // then should throw a wrapped error.\n      throw this.getError(error.message);\n    }\n\n    return true;\n  }\n}\n","/**\n * Base class for all schema classes.\n */\n\nimport {\n  isEmpty,\n  isNotRequired,\n  isNaN,\n  isString,\n  isFunction,\n  isFinalError,\n  isCustomError,\n} from '../util/is';\nimport ValidateError from '../util/validate-error';\nimport RestrictRequired from '../restrict/required';\nimport RestrictCustom from '../restrict/custom';\n\nexport default class SchemaBase {\n  restricts = [];\n  typeRestrict = null;\n  requiredRestrict = null;\n\n  // Save the last restrict that added to schema. This is for add custom error\n  // message by call error method.\n  lastRestrict = null;\n\n  // The config of default return value when detected is empty.\n  defaultConfig = {\n    enable: false,\n    strict: false,\n    ctx: null,\n    value: undefined,\n  };\n\n  // The config of return value's formatter. By default, this will not do any\n  // formatting. This can be setted by call `format` method.\n  formatterConfig = {\n    ctx: undefined,\n    formatter: val => val,\n  };\n\n  // The custom error message config for all restricts. This can be setted by\n  // call 'errorForAll` method.\n  errorForAllConfig = {\n    enable: false,\n    ctx: undefined,\n    message: '',\n  };\n\n  /**\n   * Validate value.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    // When it's not required, and the detected value is undefined or null, then it's no need\n    // to validate any more, just return default value or default value after formated.\n    if (!this.requiredRestrict && isNotRequired(val)) {\n      return this.getReturnValue(val);\n    }\n\n    try {\n      this.checkType(val);\n      this.checkRequired(val);\n      this.checkRestricts(val);\n\n      return this.getReturnValue(val);\n    } catch (error) {\n      if (isCustomError(error)) {\n        throw error;\n      }\n\n      const errorForAll = this.getErrorForAll(error.message);\n\n      if (errorForAll) {\n        throw errorForAll;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Validate value by silent. The deference from validate method is that validate method will\n   * throw an error when validate fail, but validateSilent will not.\n   *\n   * @param {*} val The detected value.\n   */\n  validateSilent(val) {\n    try {\n      return {\n        value: this.validate(val),\n      };\n    } catch (error) {\n      return {\n        error,\n        value: val,\n      };\n    }\n  }\n\n  /**\n   * Add a \"required\" restrict to schema.\n   *\n   * @param {Boolean} [strict] Whether enable strict mode. By default, the mode\n   * is non-strict. If you pass strict exactly true, it will enable strict mode.\n   */\n  required(strict) {\n    this.requiredRestrict = new RestrictRequired(strict);\n    this.lastRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  /**\n   * Add a \"custom\" restrict to schema.\n   *\n   * @param {Function} restrictFn The custom restrict callback function.\n   * @param {*}        [ctx]      The exec context of restrictFn.\n   */\n  custom(restrictFn, ctx) {\n    const restrict = new RestrictCustom(restrictFn, ctx);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Set custom error message for the last restrict added to schema.\n   *\n   * @param {String|Function} message The custom error message.\n   * @param {*}               ctx     The excute context when message is a function.\n   */\n  error(message, ctx) {\n    this.ensureMessageType(message);\n    this.lastRestrict.setErrorMessage(message, ctx);\n    return this;\n  }\n\n  /**\n   * Set custom error message for all restrict. The message setted by `error` method\n   * is priority to that setted by `errorForAll`.\n   *\n   * @param {String|Function} message The custom error message.\n   * @param {*}               ctx     The excute context when message is a function.\n   */\n  errorForAll(message, ctx) {\n    this.ensureMessageType(message);\n    this.errorForAllConfig = {\n      enable: true,\n      message,\n      ctx,\n    };\n\n    return this;\n  }\n\n  /**\n   * Set the default return value of validate when the detected value is empty.\n   *\n   * @param {*}       args[0] The default return value.\n   * @param {boolean} args[1] Whether to enable strict mode.\n   * @param {*}       args[2] The execute context of value when value is a function.\n   */\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('default arguments should not be empty');\n    }\n\n    const [value, strict, ctx] = args;\n    this.defaultConfig = {\n      ctx,\n      value,\n      enable: true,\n      strict: strict === true,\n    };\n\n    return this;\n  }\n\n  /**\n   * Format the return value of validate method.\n   *\n   * @param {Function} formatter The function that format the return value.\n   * @param {*}        [ctx]     The execute context of formatter.\n   */\n  format(formatter, ctx) {\n    if (typeof formatter !== 'function') {\n      throw new TypeError('`formatter` should be a type of function');\n    }\n\n    this.formatterConfig = {\n      ctx,\n      formatter,\n    };\n\n    return this;\n  }\n\n  /**\n   * Get the last return value of validate.\n   *\n   * @param {*} val The origin detected value.\n   */\n  getReturnValue(val) {\n    const { enable, strict } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n\n    if (enable && strict && isEmpty(val)) {\n      return formatter.call(\n        ctx,\n        this.getDefaultReturnValue(val),\n      );\n    }\n\n    return this.getReturnValueWithoutStrict(val);\n  }\n\n  /**\n   * Get the default return value of validate.\n   *\n   * @param {*} val The origin detected value.\n   */\n  getDefaultReturnValue(val) {\n    const { value, ctx } = this.defaultConfig;\n\n    if (typeof value === 'function') {\n      return value.call(ctx, val);\n    }\n\n    return value;\n  }\n\n  /**\n   * Get the error message for all restricts.\n   *\n   * @param {string} originalMessage The origin error message throwed by racoon.\n   */\n  getErrorForAll(originalMessage) {\n    const {\n      ctx,\n      enable,\n      message,\n    } = this.errorForAllConfig;\n\n    if (enable !== true) {\n      return null;\n    }\n\n    if (isFunction(message)) {\n      return new ValidateError(message.call(ctx, originalMessage));\n    }\n\n    return new ValidateError(message);\n  }\n\n  /**\n   * Check if the detected value's type is right.\n   *\n   * @param {*} val The detected value.\n   */\n  checkType(val) {\n    return this.typeRestrict.validate(val);\n  }\n\n  /**\n   * Check if the detected value meet \"required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  checkRequired(val) {\n    if (!this.requiredRestrict) {\n      return true;\n    }\n\n    return this.requiredRestrict.validate(val);\n  }\n\n  /**\n   * Check all restricts for the detected value.\n   *\n   * @param {*} val The detected value\n   */\n  checkRestricts(val) {\n    this.restricts.forEach((restrict) => {\n      restrict.validate(val);\n    });\n    return true;\n  }\n\n  /**\n   * Throw error without key chain when:\n   * 1. The error is the final error, it's no need to add key chain.\n   * 2. Or the error is custom error, it should not to add key chain.\n   *\n   * @param {Error} error The origin error object.\n   */\n  throwErrorWithoutKeyChainIfNeeded(error) {\n    if (isFinalError(error)) {\n      throw error;\n    }\n\n    if (isCustomError(error)) {\n      throw new ValidateError(error.message, { final: true });\n    }\n  }\n\n  /**\n   * @private\n   * Check if message is a valid type.\n   *\n   * @param {*} message The message param user passed.\n   */\n  ensureMessageType(message) {\n    if (!isString(message) && !isFunction(message)) {\n      throw new TypeError('`message` should be a type of string or function');\n    }\n  }\n\n  /**\n   * @private\n   * Get the last return value of validate. This is for non-strict mode scene.\n   *\n   * @param {*} val The origin return value.\n   */\n  getReturnValueWithoutStrict(val) {\n    const { enable } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n    let value = val;\n\n    // If there is a default return value, then format the default value and\n    // return it.\n    if (enable && (isNotRequired(val) || isNaN(val))) {\n      value = this.getDefaultReturnValue(val);\n    }\n\n    // Otherwise, format the origin return value and return it.\n    return formatter.call(ctx, value);\n  }\n}\n","/**\n * Class for any schema.\n */\n\nimport { TYPE } from '../util/constants';\nimport RestrictAnySchema from '../restrict/any-schema';\nimport RestrictAnyRequired from '../restrict/any-required';\nimport RestrictEnum from '../restrict/enum';\nimport SchemaBase from './base';\n\nexport default class SchemaAny extends SchemaBase {\n  type = TYPE.any;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictAnySchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Add a \"required\" restrict to any schema.\n   *\n   * @param {Boolean} [strict] Whether enable strict mode. By default, the mode\n   * is non-strict. If you pass strict exactly true, it will enable strict mode.\n   */\n  required(strict) {\n    this.requiredRestrict = new RestrictAnyRequired(strict);\n    this.lastRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  /**\n   * Add an \"enum\" restrict to any schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n}\n","/**\n * Restrict value to be type of number.\n */\n\nimport RestrictBase from './base';\nimport {\n  isNaN,\n  isNumber,\n  isInfinity,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictNumberSchema extends RestrictBase {\n  // Whether the detected number is allowed to be NaN. By default, it's not allowd.\n  isAllowNaN = false;\n  // Whether the detected number is allowed to be Infinity or -Infinity, By default,\n  // is't not allowd.\n  isAllowInfinity = false;\n\n  /**\n   * Allow the detected number to be NaN.\n   */\n  enableAllowNaN() {\n    this.isAllowNaN = true;\n  }\n\n  /**\n   * Allow the detected number to be Infinity or -Infinity.\n   */\n  enableAllowInfinity() {\n    this.isAllowInfinity = true;\n  }\n\n  /**\n   * Check the detected value whether meets this \"number-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    const { isAllowNaN, isAllowInfinity } = this;\n\n    if (isNaN(val) && !isAllowNaN) {\n      throw this.getError('value is not allowed to be NaN');\n    }\n\n    if (isInfinity(val) && !isAllowInfinity) {\n      throw this.getError('value is not allowed to be Infinity');\n    }\n\n    if (!isNumber(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of number');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number is non-empty,\n * which means it's not undefined, null or NaN. This is differet from\n * the \"required\" strict, the \"required\" strict is for non-number value.\n */\n\nimport RestrictBase from './base';\nimport { isNaN, isNotRequired } from '../util/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"number-required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (isNotRequired(val)) {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n\n    // If required restrict is added for number schema, then the detected value\n    // cann't be NaN.\n    if (isNaN(val)) {\n      throw this.getError('value is required and should not be NaN');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the max value of the detected number.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictNumberMax extends RestrictBase {\n  /**\n   * @param {Number}  max      The max value of the detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the\n   * interval is closed, which means the detected number can be equal to max.\n   * When closed is exactly false, the interval will be opened.\n   */\n  constructor(max, closed) {\n    super();\n\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be a type of number');\n    }\n\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"number-max\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val > this.max) {\n      throw this.getError(`value should be less than or equal to ${this.max}`);\n    }\n\n    if (!this.closed && val >= this.max) {\n      throw this.getError(`value should be less than ${this.max}`);\n    }\n  }\n}\n","/**\n * This is for number, to restrict the min value of the detected number.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictNumberMin extends RestrictBase {\n  /**\n   * @param {Number}  min      The min value of the detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the\n   * interval is closed, which means the detected number can be equal to min.\n   * When closed is exactly false, the interval will be opened.\n   */\n  constructor(min, closed) {\n    super();\n\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a type of number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"number-min\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val < this.min) {\n      throw this.getError(`value should be greater than or equal to ${this.min}`);\n    }\n\n    if (!this.closed && val <= this.min) {\n      throw this.getError(`value should be greater than ${this.min}`);\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number to be\n * an integer.\n */\n\nimport RestrictBase from './base';\nimport { isInt } from '../util/is';\n\nexport default class RestrictNumberInt extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"number-int\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (isInt(val) === false) {\n      throw this.getError('value should be an integer');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number to be an even integer.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictNumberEven extends RestrictBase {\n  /**\n   * Check the detected number whether meets this \"number-even\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (val % 2 !== 0) {\n      throw this.getError('value should be an even integer');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number to be an odd integer.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictNumberOdd extends RestrictBase {\n  /**\n   * Check the detected number whether meets this \"number-odd\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (Math.abs(val) % 2 !== 1) {\n      throw this.getError('value should be an odd integer');\n    }\n  }\n}\n","import {\n  isString,\n  isStringNumber,\n} from '../util/is';\nimport { TYPE } from '../util/constants';\nimport RestrictNumberSchema from '../restrict/number-schema';\nimport RestrictNumberRequired from '../restrict/number-required';\nimport RestrictEnum from '../restrict/enum';\nimport RestrictNumberMax from '../restrict/number-max';\nimport RestrictNumberMin from '../restrict/number-min';\nimport RestrictNumberInt from '../restrict/number-int';\nimport RestrictNumberEven from '../restrict/number-even';\nimport RestrictNumberOdd from '../restrict/number-odd';\nimport SchemaBase from './base';\n\nexport default class SchemaNumber extends SchemaBase {\n  type = TYPE.number;\n  isAllowString = false;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictNumberSchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Set the default return value of validate when the detected value is empty.\n   *\n   * @param {*} args[0] The default return value.\n   * @param {*} args[1] The execute context of value when value is a function.\n   */\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('default arguments should not be empty');\n    }\n\n    const [value, ctx] = args;\n\n    this.defaultConfig = {\n      ctx,\n      value,\n      enable: true,\n      strict: false,\n    };\n\n    return this;\n  }\n\n  /**\n   * Add an \"enum\" restrict to boolean schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"required\" restrict to number schema.\n   */\n  required() {\n    this.requiredRestrict = new RestrictNumberRequired();\n    this.lastRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  /**\n   * By default, number schema doesn't allow the detected value to be NaN. If\n   * allowNaN method is called, then NaN will be allowd.\n   */\n  allowNaN() {\n    this.typeRestrict.enableAllowNaN();\n    return this;\n  }\n\n  /**\n   * By default, number schema doesn't allow the detected value to be Infinity.\n   * If allowInfinity method is called, then Infinity will be allowd.\n   */\n  allowInfinity() {\n    this.typeRestrict.enableAllowInfinity();\n    return this;\n  }\n\n  /**\n   * By default, number schema doesn't allow the detected value to be number\n   * style string. For example, a string \"123\" is not allowed. If allowString\n   * method is called, then number schema will try to parse string to number.\n   */\n  allowString() {\n    this.isAllowString = true;\n    return this;\n  }\n\n  /**\n   * Add a \"min-number\" restrict for detected number.\n   *\n   * @param {Number}  min      The min value of detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the value of the detected number can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  min(min, closed) {\n    const restrict = new RestrictNumberMin(min, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"max-number\" restrict to number schema.\n   *\n   * @param {Number}  max      The max value of detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the value of the detected number can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  max(max, closed) {\n    const restrict = new RestrictNumberMax(max, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add an \"int-number\" restrict to number schema.\n   */\n  int() {\n    const restrict = new RestrictNumberInt();\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  even() {\n    const restrict = new RestrictNumberEven();\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  odd() {\n    const restrict = new RestrictNumberOdd();\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * @override\n   * Validate value.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    let value = val;\n\n    // If allowString is called, then preparse string to number.\n    if (\n      this.isAllowString\n      && isString(val)\n      && isStringNumber(val)\n    ) {\n      value = Number(val);\n    }\n\n    return super.validate(value);\n  }\n}\n","/**\n * Restrict value to be type of string.\n */\n\nimport RestrictBase from './base';\nimport {\n  isString,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictStringSchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"string-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (!isString(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of string');\n    }\n  }\n}\n","/**\n * Restrict the max length of detected value. The detected value\n * can be string or array.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictLengthMax extends RestrictBase {\n  /**\n   * @param {Number}  max      The max length of detected value.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected value can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  constructor(max, closed) {\n    super();\n\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be a type of number');\n    }\n\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"length-max\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val.length > this.max) {\n      throw this.getError(`value length should be less than or equal to ${this.max}`);\n    }\n\n    if (!this.closed && val.length >= this.max) {\n      throw this.getError(`value length should be less than ${this.max}`);\n    }\n\n    return true;\n  }\n}\n","/**\n * Restrict the min length of detected value. The detected value\n * can be string or array.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictLengthMin extends RestrictBase {\n  /**\n   * @param {Number}  min      The min length of detected value.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected value can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  constructor(min, closed) {\n    super();\n\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a type of number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"length-min\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val.length < this.min) {\n      throw this.getError(`value length should be greater than or equal to ${this.min}`);\n    }\n\n    if (!this.closed && val.length <= this.min) {\n      throw this.getError(`value length should greater than ${this.min}`);\n    }\n\n    return true;\n  }\n}\n","/**\n * Restrict string format by a regular expression.\n */\n\nimport RestrictBase from './base';\nimport { isRegExp } from '../util/is';\n\nexport default class RestrictStringPattern extends RestrictBase {\n  pattern = null;\n\n  /**\n   * @param {RegExp} pattern The regular expression to restrict the format of string.\n   */\n  constructor(pattern) {\n    super();\n\n    if (isRegExp(pattern) === false) {\n      throw new TypeError('pattern should be an RegExp');\n    }\n\n    this.pattern = pattern;\n  }\n\n  /**\n   * Check the detected value whether meets this \"string-pattern\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (!this.pattern.test(val)) {\n      throw this.getError(`value should match pattern ${this.pattern.toString()}`);\n    }\n  }\n}\n","import { TYPE } from '../util/constants';\nimport RestrictStringSchema from '../restrict/string-schema';\nimport RestrictEnum from '../restrict/enum';\nimport RestrictLengthMax from '../restrict/length-max';\nimport RestrictLengthMin from '../restrict/length-min';\nimport RestrictStringPattern from '../restrict/string-pattern';\nimport SchemaBase from './base';\n\nexport default class SchemaString extends SchemaBase {\n  type = TYPE.string;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictStringSchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Add an \"enum\" restrict to string schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"min-length\" restrict to string schema.\n   *\n   * @param {Number}  min      The min length of detected string.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected string can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  min(min, closed) {\n    const restrict = new RestrictLengthMin(min, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"max-length\" restrict to string schema.\n   *\n   * @param {Number}  max      The max length of detected string.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected string can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  max(max, closed) {\n    const restrict = new RestrictLengthMax(max, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"pattern\" string to string schema.\n   *\n   * @param {RegExp} pattern RegExp to restrict the format of string.\n   */\n  pattern(pattern) {\n    const restrict = new RestrictStringPattern(pattern);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n}\n","/**\n * Restrict value to be type of boolean.\n */\n\nimport RestrictBase from './base';\nimport {\n  isBoolean,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictBooleanSchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"boolean-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    // When the detected value isn't boolean, null or undefined, validation\n    // will be fail. Otherwise, validation will be success.\n    if (!isBoolean(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of boolean');\n    }\n  }\n}\n","import { TYPE } from '../util/constants';\nimport RestrictBooleanSchema from '../restrict/boolean-schema';\nimport RestrictEnum from '../restrict/enum';\nimport SchemaBase from './base';\n\nexport default class SchemaBoolean extends SchemaBase {\n  type = TYPE;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictBooleanSchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Add an \"enum\" restrict to boolean schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Set the default return value of validate when the detected value is empty.\n   *\n   * @param {*} args[0] The default return value.\n   * @param {*} args[1] The execute context of value when value is a function.\n   */\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('default arguments should not be empty');\n    }\n\n    const [value, ctx] = args;\n\n    this.defaultConfig = {\n      ctx,\n      value,\n      enable: true,\n      strict: false,\n    };\n\n    return this;\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/**\n * Get key chain string.\n * @example\n * const keyChainStr = getKeyStr([\n *   {\n *     type: 'prop',\n *     key: 'peoples',\n *   },\n *   {\n *     type: 'index',\n *     key: 2,\n *   },\n *   {\n *     type: 'prop',\n *     key: 'friend',\n *   },\n *   {\n *     type: 'prop',\n *     key: 'first name',\n *   },\n * ]);\n * assert(keyChainStr === 'peoples[0].friend[\\'first name\\']');\n *\n * @param {Array} keyChain Key chain list.\n */\nexport default function getKeyStr(keyChain) {\n  const propReg = /^[_$a-z][_$a-z\\d]*$/i;\n  let result = '';\n\n  keyChain.forEach(({ type, key }) => {\n    if (type === 'prop' && propReg.test(key)) {\n      if (result) {\n        result += `.${key}`;\n      } else {\n        result += key;\n      }\n    } else if (type === 'prop') {\n      result += `['${key}']`;\n    } else if (type === 'index') {\n      result += `[${key}]`;\n    }\n  });\n\n  return result;\n}\n","/**\n * Restrict value to be type of object.\n */\n\nimport RestrictBase from './base';\nimport {\n  isObject,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictObjectSchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"object-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (isObject(val) || isNotRequired(val)) {\n      return true;\n    }\n\n    throw this.getError('value should be a type of object');\n  }\n}\n","import {\n  isObject,\n  isNotRequired,\n} from '../util/is';\nimport {\n  TYPE,\n  useKeyChainSymbol,\n} from '../util/constants';\nimport getKeyStr from '../util/get-key-str';\nimport RestrictObjectSchema from '../restrict/object-schema';\nimport ValidateError from '../util/validate-error';\nimport SchemaBase from './base';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport default class SchemaObject extends SchemaBase {\n  type = TYPE.object;\n  config = null;\n  isStripUnknown = false;\n  isAllowUnknown = false;\n\n  constructor(config) {\n    super();\n    this.typeRestrict = new RestrictObjectSchema();\n    this.lastRestrict = this.typeRestrict;\n\n    // If config is passed non-object, it means that the key-value structure\n    // is no need to restrct.\n    if (isObject(config)) {\n      const pureConfig = {};\n\n      // Filter the keys that corresponding value is an instance of SchemaBase.\n      // This is for the purpose that allow config include value that is not an\n      // instance of SchemaBase, and ingore them.\n      Object.keys(config).forEach((key) => {\n        if (config[key] instanceof SchemaBase) {\n          pureConfig[key] = config[key];\n        }\n      });\n      this.config = pureConfig;\n    }\n  }\n\n  /**\n   * If stripUnkown is called, then the return result of validate method will\n   * not include the keys that not included in config.\n   */\n  stripUnknown() {\n    this.isStripUnknown = true;\n    return this;\n  }\n\n  /**\n   * By default, the detected object is not allowed to include the unknown keys\n   * that is not included in config. If allowUnknown is called, then these\n   * unknown keys will be allowed, and these unknown key-values will be returned\n   * in validate result.\n   */\n  allowUnknown() {\n    this.isAllowUnknown = true;\n    return this;\n  }\n\n  /**\n   * Validate value.\n   *\n   * @param {*}      obj         The value to validate.\n   * @param {Symbol} useKeyChain If pass the special symbol, the keyChain param\n   * will be used.\n   * @param {Array}  keyChain    The passed key chain of parent keys.\n   */\n  validate(obj, useKeyChain, keyChain) {\n    // When it's not required, and the detected value is undefined or null,\n    // then it's no need to validate any more, just return default value or\n    // default value after formated.\n    if (!this.requiredRestrict && isNotRequired(obj)) {\n      return this.getReturnValue(obj);\n    }\n\n    try {\n      this.checkType(obj);\n      this.checkRequired(obj);\n      this.checkRestricts(obj);\n\n      return this.getReturnValue(this.validateByRecurse(\n        obj,\n        useKeyChain === useKeyChainSymbol ? keyChain : undefined,\n      ));\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const errorForAll = this.getErrorForAll(error.message);\n\n      if (errorForAll) {\n        throw errorForAll;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * @private\n   * Traverse each key of the object and validate each value recursively.\n   *\n   * @param {Array} obj           The detected object.\n   * @param {Array} [keyChain=[]] The key chain of ancestors to give friendly\n   * error prompts.\n   * @returns {Object}            The return value if validate pass.\n   */\n  validateByRecurse(obj, keyChain = []) {\n    if (this.config === null) {\n      return obj;\n    }\n\n    const result = {};\n    const chain = keyChain;\n    const keys = Object.keys(this.config);\n\n    keys.forEach((key) => {\n      const schema = this.config[key];\n\n      if (!schema.requiredRestrict && !hasOwnProperty.call(obj, key)) {\n        this.setResultWhenDefaultEnabled({\n          key,\n          result,\n        });\n      } else {\n        result[key] = this.validateObjectByKey(obj, {\n          key,\n          chain,\n        });\n      }\n    });\n    if (!this.isStripUnknown) {\n      Object\n        .keys(obj)\n        .forEach((key) => {\n          const notIncluded = keys.includes(key) === false;\n\n          if (notIncluded && !this.isAllowUnknown) {\n            throw new ValidateError(`the key \\`${key}\\` is not allowed`);\n          }\n\n          if (notIncluded) {\n            result[key] = obj[key];\n          }\n        });\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * Validate an key-value of the detected object.\n   *\n   * @param {object} obj            The detected object.\n   * @param {object} options\n   * @param {string} options.key    The prop key.\n   * @param {array}  options.chain  The key chain of ancestors to give friendly\n   * error prompts.\n   */\n  validateObjectByKey(obj, options) {\n    const { key, chain } = options;\n    const schema = this.config[key];\n    const keyOption = { key, type: 'prop' };\n\n    try {\n      return schema.validate(\n        obj[key],\n        useKeyChainSymbol,\n        [\n          ...chain,\n          keyOption,\n        ],\n      );\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const keyChainStr = `\"${getKeyStr([...chain, keyOption])}\": `;\n\n      throw new ValidateError(\n        `${keyChainStr}${error.message}`,\n        { final: true },\n      );\n    }\n  }\n\n  /**\n   * @private\n   * Set some key-values of return value when default method was called.\n   *\n   * @param {object} params\n   * @param {string} params.key    The prop key.\n   * @param {object} params.result The value that will be returned.\n   * @returns {void}\n   */\n  setResultWhenDefaultEnabled(params) {\n    const { key, result } = params;\n\n    const schema = this.config[key];\n    if (schema.defaultConfig.enable) {\n      result[key] = schema.getDefaultReturnValue(undefined);\n    }\n  }\n}\n","/**\n * Restrict value to be type of array.\n */\n\nimport RestrictBase from './base';\nimport {\n  isArray,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictArraySchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"array-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    // When the detected value isn't array, null or undefined, validation\n    // will be fail. Otherwise, validation will be success.\n    if (!isArray(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of array');\n    }\n  }\n}\n","/**\n * Class for array schema.\n */\n\nimport {\n  isNotRequired,\n} from '../util/is';\nimport {\n  TYPE,\n  useKeyChainSymbol,\n} from '../util/constants';\nimport getKeyStr from '../util/get-key-str';\nimport ValidateError from '../util/validate-error';\nimport RestrictArraySchema from '../restrict/array-schema';\nimport RestrictLengthMin from '../restrict/length-min';\nimport RestrictLengthMax from '../restrict/length-max';\nimport SchemaBase from './base';\n\nexport default class SchemaArray extends SchemaBase {\n  type = TYPE.array;\n  itemSchema = null;\n\n  /**\n   * @param {SchemaBase} itemSchema The schema defined for every item of array.\n   * If itemSchema isn't instanceof SchemaBase, then it will be ignored, this\n   * means that the detected array can include any type value.\n   */\n  constructor(itemSchema) {\n    super();\n    this.typeRestrict = new RestrictArraySchema();\n    this.lastRestrict = this.typeRestrict;\n\n    // Only handle itemSchema when it's instanceof SchemaBase.\n    if (itemSchema instanceof SchemaBase) {\n      this.itemSchema = itemSchema;\n    }\n  }\n\n  /**\n   * Add a \"min-length\" restrict to array schema.\n   *\n   * @param {Number}  min      The min length of detected array.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected array can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  min(min, closed) {\n    const restrict = new RestrictLengthMin(min, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"max-length\" restrict to array schema.\n   *\n   * @param {Number}  max      The max length of detected array.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected array can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  max(max, closed) {\n    const restrict = new RestrictLengthMax(max, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Validate value.\n   *\n   * @param {*}      array       The value to validate.\n   * @param {Symbol} useKeyChain If pass the special symbol, the keyChain param will be used.\n   * @param {Array}  keyChain    The passed key chain of parent keys.\n   */\n  validate(array, useKeyChain, keyChain) {\n    // When it's not required, and the detected value is undefined or null, then it's no need\n    // to validate any more, just return default value or default value after formated.\n    if (!this.requiredRestrict && isNotRequired(array)) {\n      return this.getReturnValue(array);\n    }\n\n    try {\n      this.checkType(array);\n      this.checkRequired(array);\n      this.checkRestricts(array);\n\n      return this.getReturnValue(this.validateByRecurse(\n        array,\n        useKeyChain === useKeyChainSymbol ? keyChain : undefined,\n      ));\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const errorForAll = this.getErrorForAll(error.message);\n\n      if (errorForAll) {\n        throw errorForAll;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * @private\n   * Traverse each item of the array and validate each member recursively.\n   *\n   * @param {Array} array         The detected array.\n   * @param {Array} [keyChain=[]] The key chain of ancestors to give friendly error prompts.\n   * @returns {Array}             The return value if validate pass.\n   */\n  validateByRecurse(array, keyChain = []) {\n    const chain = keyChain;\n    const { itemSchema } = this;\n\n    if (itemSchema) {\n      return array.map((_, index) => this.validateItem({\n        index,\n        array,\n        chain,\n      }));\n    }\n\n    // Return a shallow copy of the detected array.\n    return [...array];\n  }\n\n  /**\n   * @private\n   * Validate an item of the detected array.\n   *\n   * @param {object} params\n   * @param {number} params.index  The index of the item in array.\n   * @param {array}  params.array  The detected array.\n   * @param {array}  params.chain  The key chain of ancestors.\n   */\n  validateItem(params) {\n    const {\n      index,\n      array,\n      chain,\n    } = params;\n    const { itemSchema } = this;\n\n    try {\n      return itemSchema.validate(\n        array[index],\n        useKeyChainSymbol,\n        [...chain, { type: 'index', key: index }],\n      );\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const keyOption = {\n        type: 'index',\n        key: index,\n      };\n      const keyChainStr = `\"${getKeyStr([...chain, keyOption])}\": `;\n\n      throw new ValidateError(\n        `${keyChainStr}${error.message}`,\n        { final: true },\n      );\n    }\n  }\n}\n","/**\n * Mixed schema, it means you can combine several schemas into one schema.\n */\n\nimport SchemaBase from './base';\n\nexport default class SchemaMixed extends SchemaBase {\n  schemas = null;\n\n  /**\n   * @param {Array<SchemaBase>} schemas The allowed schemas.\n   */\n  constructor(...schemas) {\n    super();\n\n    if (schemas.length === 0) {\n      throw new RangeError('mixed arguments should not be empty');\n    }\n\n    this.schemas = schemas;\n  }\n\n  /**\n   * Validate value.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    let finalError = null;\n\n    for (let i = 0; i < this.schemas.length; i += 1) {\n      try {\n        return this.schemas[i].validate(val);\n      } catch (error) {\n        finalError = error;\n      }\n    }\n\n    throw finalError;\n  }\n}\n","import {\n  SchemaAny,\n  SchemaNumber,\n  SchemaString,\n  SchemaBoolean,\n  SchemaObject,\n  SchemaArray,\n  SchemaMixed,\n} from './schema';\n\nexport function any() {\n  return new SchemaAny();\n}\n\nexport function number() {\n  return new SchemaNumber();\n}\n\nexport function string() {\n  return new SchemaString();\n}\n\nexport function boolean() {\n  return new SchemaBoolean();\n}\n\nexport function object(config) {\n  return new SchemaObject(config);\n}\n\nexport function array(itemSchema) {\n  return new SchemaArray(itemSchema);\n}\n\nexport function mixed(...schemas) {\n  return new SchemaMixed(...schemas);\n}\n\nexport default {\n  any,\n  number,\n  string,\n  boolean,\n  object,\n  array,\n  mixed,\n};\n"],"names":["isNativeReflectConstruct","setPrototypeOf","assertThisInitialized","TYPE","number","string","boolean","object","array","any","useKeyChainSymbol","Symbol","getPrototypeOf","superPropBase","isNativeFunction","construct","ValidateError","message","options","custom","final","Error","toString","Object","prototype","getType","val","str","call","substring","length","isUndefined","undefined","isNull","isNaN","isString","isNumber","isInt","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","isBoolean","isRegExp","RegExp","isObject","isArray","isNotRequired","isEmpty","type","keys","isFunction","isStringNumber","test","isCustomError","error","isFinalError","RestrictBase","errorConfig","ctx","originMessage","RestrictAnySchema","RestrictAnyRequired","strict","getError","RestrictEnum","enumValues","values","RangeError","indexOf","JSON","stringify","RestrictRequired","RestrictCustom","restrictFn","TypeError","result","SchemaBase","restricts","typeRestrict","requiredRestrict","lastRestrict","defaultConfig","enable","value","formatterConfig","formatter","errorForAllConfig","getReturnValue","checkType","checkRequired","checkRestricts","errorForAll","getErrorForAll","validate","restrict","push","ensureMessageType","setErrorMessage","args","getDefaultReturnValue","getReturnValueWithoutStrict","originalMessage","forEach","SchemaAny","RestrictNumberSchema","isAllowNaN","isAllowInfinity","RestrictNumberMax","max","closed","RestrictNumberMin","min","RestrictNumberInt","RestrictNumberEven","RestrictNumberOdd","Math","abs","SchemaNumber","isAllowString","RestrictNumberRequired","enableAllowNaN","enableAllowInfinity","RestrictStringSchema","RestrictLengthMax","RestrictLengthMin","RestrictStringPattern","pattern","SchemaString","RestrictBooleanSchema","SchemaBoolean","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","getKeyStr","keyChain","propReg","key","RestrictObjectSchema","hasOwnProperty","SchemaObject","config","isStripUnknown","isAllowUnknown","pureConfig","obj","useKeyChain","validateByRecurse","throwErrorWithoutKeyChainIfNeeded","chain","schema","setResultWhenDefaultEnabled","validateObjectByKey","notIncluded","includes","keyOption","keyChainStr","params","RestrictArraySchema","SchemaArray","itemSchema","map","_","index","validateItem","SchemaMixed","schemas","finalError","i","mixed"],"mappings":"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"}