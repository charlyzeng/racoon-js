{"version":3,"sources":["webpack://racoon/webpack/universalModuleDefinition","webpack://racoon/webpack/bootstrap","webpack://racoon/./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack://racoon/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://racoon/./node_modules/@babel/runtime/helpers/createClass.js","webpack://racoon/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://racoon/./node_modules/@babel/runtime/helpers/inherits.js","webpack://racoon/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://racoon/./lib/util/is.js","webpack://racoon/./lib/restrict/base.js","webpack://racoon/./lib/schema/base.js","webpack://racoon/./node_modules/@babel/runtime/helpers/construct.js","webpack://racoon/./lib/util/constants.js","webpack://racoon/./lib/util/validate-error.js","webpack://racoon/./lib/restrict/enum.js","webpack://racoon/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://racoon/./node_modules/@babel/runtime/helpers/get.js","webpack://racoon/./lib/restrict/length-max.js","webpack://racoon/./lib/restrict/length-min.js","webpack://racoon/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://racoon/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://racoon/./lib/util/get-key-str.js","webpack://racoon/./lib/index.js","webpack://racoon/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://racoon/./lib/schema/any.js","webpack://racoon/./node_modules/@babel/runtime/helpers/typeof.js","webpack://racoon/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://racoon/./lib/restrict/any-schema.js","webpack://racoon/./node_modules/@babel/runtime/helpers/superPropBase.js","webpack://racoon/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack://racoon/./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack://racoon/./lib/restrict/any-required.js","webpack://racoon/./lib/restrict/required.js","webpack://racoon/./lib/restrict/custom.js","webpack://racoon/./lib/schema/number.js","webpack://racoon/./lib/restrict/number-schema.js","webpack://racoon/./lib/restrict/number-required.js","webpack://racoon/./lib/restrict/number-max.js","webpack://racoon/./lib/restrict/number-min.js","webpack://racoon/./lib/restrict/number-int.js","webpack://racoon/./lib/restrict/number-even.js","webpack://racoon/./lib/restrict/number-odd.js","webpack://racoon/./lib/schema/string.js","webpack://racoon/./lib/restrict/string-schema.js","webpack://racoon/./lib/restrict/string-pattern.js","webpack://racoon/./lib/schema/boolean.js","webpack://racoon/./lib/restrict/boolean-schema.js","webpack://racoon/./lib/schema/object.js","webpack://racoon/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://racoon/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://racoon/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://racoon/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://racoon/./lib/restrict/object-schema.js","webpack://racoon/./lib/schema/arrary.js","webpack://racoon/./lib/restrict/array-schema.js","webpack://racoon/./lib/schema/mixed.js"],"names":["toString","Object","prototype","getType","val","str","call","substring","length","isUndefined","undefined","isNull","isNaN","isString","isNumber","isInt","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","isBoolean","isRegExp","RegExp","isObject","isArray","isNotRequired","isEmpty","type","keys","isFunction","isStringNumber","test","isCustomError","error","ValidateError","custom","isFinalError","final","RestrictBase","errorConfig","ctx","message","originMessage","SchemaBase","restricts","typeRestrict","requiredRestrict","lastRestrict","defaultConfig","enable","strict","value","formatterConfig","formatter","errorForAllConfig","getReturnValue","checkType","checkRequired","checkRestricts","errorForAll","getErrorForAll","validate","RestrictRequired","restrictFn","restrict","RestrictCustom","push","ensureMessageType","setErrorMessage","args","Error","TypeError","getDefaultReturnValue","getReturnValueWithoutStrict","originalMessage","forEach","TYPE","number","string","boolean","object","array","any","useKeyChainSymbol","Symbol","options","RestrictEnum","enumValues","values","RangeError","indexOf","getError","JSON","stringify","RestrictLengthMax","max","closed","RestrictLengthMin","min","getKeyStr","keyChain","propReg","result","key","SchemaAny","SchemaNumber","SchemaString","SchemaBoolean","config","SchemaObject","itemSchema","SchemaArray","mixed","schemas","SchemaMixed","RestrictAnySchema","RestrictAnyRequired","isAllowString","RestrictNumberSchema","RestrictNumberRequired","enableAllowNaN","enableAllowInfinity","RestrictNumberMin","RestrictNumberMax","RestrictNumberInt","RestrictNumberEven","RestrictNumberOdd","isAllowNaN","isAllowInfinity","Math","abs","RestrictStringSchema","pattern","RestrictStringPattern","RestrictBooleanSchema","hasOwnProperty","isStripUnknown","isAllowUnknown","RestrictObjectSchema","pureConfig","obj","useKeyChain","validateByRecurse","throwErrorWithoutKeyChainIfNeeded","chain","schema","setResultWhenDefaultEnabled","validateObjectByKey","notIncluded","includes","keyOption","keyChainStr","params","RestrictArraySchema","map","_","index","validateItem","finalError","i"],"mappings":"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","file":"racoon.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"racoon\"] = factory();\n\telse\n\t\troot[\"racoon\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","import ValidateError from './validate-error';\n\nconst { toString } = Object.prototype;\n\nexport function getType(val) {\n  const str = toString.call(val);\n  return str.substring(8, str.length - 1);\n}\n\nexport function isUndefined(val) {\n  return val === undefined;\n}\n\nexport function isNull(val) {\n  return val === null;\n}\n\nexport function isNaN(val) {\n  return val !== val;\n}\n\nexport function isString(val) {\n  return typeof val === 'string';\n}\n\nexport function isNumber(val) {\n  return typeof val === 'number';\n}\n\nexport function isInt(val) {\n  return isNumber(val) && val % 1 === 0;\n}\n\nexport function isInfinity(val) {\n  return (\n    val === Number.POSITIVE_INFINITY\n    || val === Number.NEGATIVE_INFINITY\n  );\n}\n\nexport function isBoolean(val) {\n  return typeof val === 'boolean';\n}\n\nexport function isRegExp(val) {\n  return val instanceof RegExp;\n}\n\nexport function isObject(val) {\n  return getType(val) === 'Object';\n}\n\nexport function isArray(val) {\n  return getType(val) === 'Array';\n}\n\nexport function isNotRequired(val) {\n  return isUndefined(val) || isNull(val);\n}\n\nexport function isEmpty(val) {\n  const type = getType(val);\n\n  if (type === 'Object') {\n    return Object.keys(val).length === 0;\n  }\n\n  if (type === 'Array') {\n    return val.length === 0;\n  }\n\n  return (\n    isNotRequired(val)\n    || isNaN(val)\n    || val === ''\n  );\n}\n\n/**\n * Check if the value is Function. AsyncFunction or GeneratorFunction will\n * return false.\n *\n * @param {*} val The value to check.\n */\nexport function isFunction(val) {\n  return getType(val) === 'Function';\n}\n\n/**\n * Detect string whether can be parsed to number by `Number('xxx')`.\n *\n * Special case:\n * When the detected string is empty or only includes white spaces, the string\n * can be parsed to zero although, but it won't be regarded as a parsable\n * string still.\n *\n * @param {string} val The detected string.\n * @returns {boolean}\n */\nexport function isStringNumber(val) {\n  if (/^\\s*$/.test(val)) {\n    return false;\n  }\n  return !isNaN(Number(val));\n}\n\n/**\n * Check the error is a customed ValidateError.\n *\n * @param {Error} error The error object to check.\n */\nexport function isCustomError(error) {\n  return error instanceof ValidateError && error.custom;\n}\n\n/**\n * Check the error is a final ValidateError.\n *\n * @param {Error} error The error object to check.\n */\nexport function isFinalError(error) {\n  return error instanceof ValidateError && error.final;\n}\n","/**\n * The base class of all restrict.\n */\n\nimport { isFunction, isString } from '../util/is';\nimport ValidateError from '../util/validate-error';\n\nexport default class RestrictBase {\n  // To custom the error message when restrict validate fail. The message field\n  // can be either a string or a function, when it's a function, the ctx field\n  // can specify execute context of message function.\n  errorConfig = {\n    ctx: null,\n    message: '',\n  }\n\n  /**\n   * set errorConfig\n   *\n   * @param {String|Function} message The message of error.\n   * @param {*} [ctx] The execute context when message is a function.\n   */\n  setErrorMessage(message, ctx) {\n    this.errorConfig = {\n      ctx,\n      message,\n    };\n  }\n\n  /**\n   * Get the final error message when validate fail.\n   *\n   * @param {String} originMessage The origin message that throwed by racoon.\n   * @returns {ValidateError}\n   */\n  getError(originMessage) {\n    const { message, ctx } = this.errorConfig;\n\n    if (isFunction(message)) {\n      return new ValidateError(\n        message.call(ctx, originMessage),\n        { custom: true },\n      );\n    }\n\n    if (message && isString(message)) {\n      return new ValidateError(\n        message,\n        { custom: true },\n      );\n    }\n\n    return new ValidateError(originMessage);\n  }\n}\n","/**\n * Base class for all schema classes.\n */\n\nimport {\n  isEmpty,\n  isNotRequired,\n  isNaN,\n  isString,\n  isFunction,\n  isFinalError,\n  isCustomError,\n} from '../util/is';\nimport ValidateError from '../util/validate-error';\nimport RestrictRequired from '../restrict/required';\nimport RestrictCustom from '../restrict/custom';\n\nexport default class SchemaBase {\n  restricts = [];\n  typeRestrict = null;\n  requiredRestrict = null;\n\n  // Save the last restrict that added to schema. This is for add custom error\n  // message by call error method.\n  lastRestrict = null;\n\n  // The config of default return value when detected is empty.\n  defaultConfig = {\n    enable: false,\n    strict: false,\n    ctx: null,\n    value: undefined,\n  };\n\n  // The config of return value's formatter. By default, this will not do any\n  // formatting. This can be setted by call `format` method.\n  formatterConfig = {\n    ctx: undefined,\n    formatter: val => val,\n  };\n\n  // The custom error message config for all restricts. This can be setted by\n  // call 'errorForAll` method.\n  errorForAllConfig = {\n    enable: false,\n    ctx: undefined,\n    message: '',\n  };\n\n  /**\n   * Validate value.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    // When it's not required, and the detected value is undefined or null, then it's no need\n    // to validate any more, just return default value or default value after formated.\n    if (!this.requiredRestrict && isNotRequired(val)) {\n      return this.getReturnValue(val);\n    }\n\n    try {\n      this.checkType(val);\n      this.checkRequired(val);\n      this.checkRestricts(val);\n\n      return this.getReturnValue(val);\n    } catch (error) {\n      if (isCustomError(error)) {\n        throw error;\n      }\n\n      const errorForAll = this.getErrorForAll(error.message);\n\n      if (errorForAll) {\n        throw errorForAll;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Validate value by silent. The deference from validate method is that validate method will\n   * throw an error when validate fail, but validateSilent will not.\n   *\n   * @param {*} val The detected value.\n   */\n  validateSilent(val) {\n    try {\n      return {\n        value: this.validate(val),\n      };\n    } catch (error) {\n      return {\n        error,\n        value: val,\n      };\n    }\n  }\n\n  /**\n   * Add a \"required\" restrict to schema.\n   *\n   * @param {Boolean} [strict] Whether enable strict mode. By default, the mode\n   * is non-strict. If you pass strict exactly true, it will enable strict mode.\n   */\n  required(strict) {\n    this.requiredRestrict = new RestrictRequired(strict);\n    this.lastRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  /**\n   * Add a \"custom\" restrict to schema.\n   *\n   * @param {Function} restrictFn The custom restrict callback function.\n   * @param {*}        [ctx]      The exec context of restrictFn.\n   */\n  custom(restrictFn, ctx) {\n    const restrict = new RestrictCustom(restrictFn, ctx);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Set custom error message for the last restrict added to schema.\n   *\n   * @param {String|Function} message The custom error message.\n   * @param {*}               ctx     The excute context when message is a function.\n   */\n  error(message, ctx) {\n    this.ensureMessageType(message);\n    this.lastRestrict.setErrorMessage(message, ctx);\n    return this;\n  }\n\n  /**\n   * Set custom error message for all restrict. The message setted by `error` method\n   * is priority to that setted by `errorForAll`.\n   *\n   * @param {String|Function} message The custom error message.\n   * @param {*}               ctx     The excute context when message is a function.\n   */\n  errorForAll(message, ctx) {\n    this.ensureMessageType(message);\n    this.errorForAllConfig = {\n      enable: true,\n      message,\n      ctx,\n    };\n\n    return this;\n  }\n\n  /**\n   * Set the default return value of validate when the detected value is empty.\n   *\n   * @param {*}       args[0] The default return value.\n   * @param {boolean} args[1] Whether to enable strict mode.\n   * @param {*}       args[2] The execute context of value when value is a function.\n   */\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('default arguments should not be empty');\n    }\n\n    const [value, strict, ctx] = args;\n    this.defaultConfig = {\n      ctx,\n      value,\n      enable: true,\n      strict: strict === true,\n    };\n\n    return this;\n  }\n\n  /**\n   * Format the return value of validate method.\n   *\n   * @param {Function} formatter The function that format the return value.\n   * @param {*}        [ctx]     The execute context of formatter.\n   */\n  format(formatter, ctx) {\n    if (typeof formatter !== 'function') {\n      throw new TypeError('`formatter` should be a type of function');\n    }\n\n    this.formatterConfig = {\n      ctx,\n      formatter,\n    };\n\n    return this;\n  }\n\n  /**\n   * Get the last return value of validate.\n   *\n   * @param {*} val The origin detected value.\n   */\n  getReturnValue(val) {\n    const { enable, strict } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n\n    if (enable && strict && isEmpty(val)) {\n      return formatter.call(\n        ctx,\n        this.getDefaultReturnValue(val),\n      );\n    }\n\n    return this.getReturnValueWithoutStrict(val);\n  }\n\n  /**\n   * Get the default return value of validate.\n   *\n   * @param {*} val The origin detected value.\n   */\n  getDefaultReturnValue(val) {\n    const { value, ctx } = this.defaultConfig;\n\n    if (typeof value === 'function') {\n      return value.call(ctx, val);\n    }\n\n    return value;\n  }\n\n  /**\n   * Get the error message for all restricts.\n   *\n   * @param {string} originalMessage The origin error message throwed by racoon.\n   */\n  getErrorForAll(originalMessage) {\n    const {\n      ctx,\n      enable,\n      message,\n    } = this.errorForAllConfig;\n\n    if (enable !== true) {\n      return null;\n    }\n\n    if (isFunction(message)) {\n      return new ValidateError(message.call(ctx, originalMessage));\n    }\n\n    return new ValidateError(message);\n  }\n\n  /**\n   * Check if the detected value's type is right.\n   *\n   * @param {*} val The detected value.\n   */\n  checkType(val) {\n    return this.typeRestrict.validate(val);\n  }\n\n  /**\n   * Check if the detected value meet \"required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  checkRequired(val) {\n    if (!this.requiredRestrict) {\n      return true;\n    }\n\n    return this.requiredRestrict.validate(val);\n  }\n\n  /**\n   * Check all restricts for the detected value.\n   *\n   * @param {*} val The detected value\n   */\n  checkRestricts(val) {\n    this.restricts.forEach((restrict) => {\n      restrict.validate(val);\n    });\n    return true;\n  }\n\n  /**\n   * Throw error without key chain when:\n   * 1. The error is the final error, it's no need to add key chain.\n   * 2. Or the error is custom error, it should not to add key chain.\n   *\n   * @param {Error} error The origin error object.\n   */\n  throwErrorWithoutKeyChainIfNeeded(error) {\n    if (isFinalError(error)) {\n      throw error;\n    }\n\n    if (isCustomError(error)) {\n      throw new ValidateError(error.message, { final: true });\n    }\n  }\n\n  /**\n   * @private\n   * Check if message is a valid type.\n   *\n   * @param {*} message The message param user passed.\n   */\n  ensureMessageType(message) {\n    if (!isString(message) && !isFunction(message)) {\n      throw new TypeError('`message` should be a type of string or function');\n    }\n  }\n\n  /**\n   * @private\n   * Get the last return value of validate. This is for non-strict mode scene.\n   *\n   * @param {*} val The origin return value.\n   */\n  getReturnValueWithoutStrict(val) {\n    const { enable } = this.defaultConfig;\n    const { formatter, ctx } = this.formatterConfig;\n    let value = val;\n\n    // If there is a default return value, then format the default value and\n    // return it.\n    if (enable && (isNotRequired(val) || isNaN(val))) {\n      value = this.getDefaultReturnValue(val);\n    }\n\n    // Otherwise, format the origin return value and return it.\n    return formatter.call(ctx, value);\n  }\n}\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","export const TYPE = {\n  number: 'number',\n  string: 'string',\n  boolean: 'boolean',\n  object: 'object',\n  array: 'array',\n  any: 'any',\n};\n\nexport const useKeyChainSymbol = Symbol('#useKeyChainSymbol');\n","export default class ValidateError extends Error {\n  custom = false;\n  final = false;\n\n  constructor(message, options = {}) {\n    super(message);\n    const {\n      custom = false,\n      final = false,\n    } = options;\n\n    this.custom = custom;\n    this.final = final;\n  }\n\n  toString() {\n    return `Validate${super.toString()}`;\n  }\n}\n","/**\n * Restrict value to be some enum values.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictEnum extends RestrictBase {\n  enumValues = null;\n\n  /**\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  constructor(...values) {\n    super();\n\n    if (values.length === 0) {\n      throw new RangeError('enum arguments should not be empty');\n    }\n\n    this.enumValues = values;\n  }\n\n  /**\n   * Check the detected value whether meets this \"enum\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.enumValues.indexOf(val) === -1) {\n      throw this.getError(`value should be one of ${JSON.stringify(this.enumValues)}`);\n    }\n  }\n}\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","/**\n * Restrict the max length of detected value. The detected value\n * can be string or array.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictLengthMax extends RestrictBase {\n  /**\n   * @param {Number}  max      The max length of detected value.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected value can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  constructor(max, closed) {\n    super();\n\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be a type of number');\n    }\n\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"length-max\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val.length > this.max) {\n      throw this.getError(`value length should be less than or equal to ${this.max}`);\n    }\n\n    if (!this.closed && val.length >= this.max) {\n      throw this.getError(`value length should be less than ${this.max}`);\n    }\n\n    return true;\n  }\n}\n","/**\n * Restrict the min length of detected value. The detected value\n * can be string or array.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictLengthMin extends RestrictBase {\n  /**\n   * @param {Number}  min      The min length of detected value.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected value can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  constructor(min, closed) {\n    super();\n\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a type of number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"length-min\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val.length < this.min) {\n      throw this.getError(`value length should be greater than or equal to ${this.min}`);\n    }\n\n    if (!this.closed && val.length <= this.min) {\n      throw this.getError(`value length should greater than ${this.min}`);\n    }\n\n    return true;\n  }\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","/**\n * Get key chain string.\n * @example\n * const keyChainStr = getKeyStr([\n *   {\n *     type: 'prop',\n *     key: 'peoples',\n *   },\n *   {\n *     type: 'index',\n *     key: 2,\n *   },\n *   {\n *     type: 'prop',\n *     key: 'friend',\n *   },\n *   {\n *     type: 'prop',\n *     key: 'first name',\n *   },\n * ]);\n * assert(keyChainStr === 'peoples[0].friend[\\'first name\\']');\n *\n * @param {Array} keyChain Key chain list.\n */\nexport default function getKeyStr(keyChain) {\n  const propReg = /^[_$a-z][_$a-z\\d]*$/i;\n  let result = '';\n\n  keyChain.forEach(({ type, key }) => {\n    if (type === 'prop' && propReg.test(key)) {\n      if (result) {\n        result += `.${key}`;\n      } else {\n        result += key;\n      }\n    } else if (type === 'prop') {\n      result += `['${key}']`;\n    } else if (type === 'index') {\n      result += `[${key}]`;\n    }\n  });\n\n  return result;\n}\n","import {\n  SchemaAny,\n  SchemaNumber,\n  SchemaString,\n  SchemaBoolean,\n  SchemaObject,\n  SchemaArray,\n  SchemaMixed,\n} from './schema';\n\nexport function any() {\n  return new SchemaAny();\n}\n\nexport function number() {\n  return new SchemaNumber();\n}\n\nexport function string() {\n  return new SchemaString();\n}\n\nexport function boolean() {\n  return new SchemaBoolean();\n}\n\nexport function object(config) {\n  return new SchemaObject(config);\n}\n\nexport function array(itemSchema) {\n  return new SchemaArray(itemSchema);\n}\n\nexport function mixed(...schemas) {\n  return new SchemaMixed(...schemas);\n}\n\nexport default {\n  any,\n  number,\n  string,\n  boolean,\n  object,\n  array,\n  mixed,\n};\n","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","/**\n * Class for any schema.\n */\n\nimport { TYPE } from '../util/constants';\nimport RestrictAnySchema from '../restrict/any-schema';\nimport RestrictAnyRequired from '../restrict/any-required';\nimport RestrictEnum from '../restrict/enum';\nimport SchemaBase from './base';\n\nexport default class SchemaAny extends SchemaBase {\n  type = TYPE.any;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictAnySchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Add a \"required\" restrict to any schema.\n   *\n   * @param {Boolean} [strict] Whether enable strict mode. By default, the mode\n   * is non-strict. If you pass strict exactly true, it will enable strict mode.\n   */\n  required(strict) {\n    this.requiredRestrict = new RestrictAnyRequired(strict);\n    this.lastRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  /**\n   * Add an \"enum\" restrict to any schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n}\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","/**\n * Restrict value to be any type, which means that it will not\n * restrict the type of value. So, the validate method return\n * true always.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictAnySchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"any-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate() {\n    return true;\n  }\n}\n","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","/**\n * This is for any schema, to estrict value to be non-empty. By default,\n * non-empty means the detected value cann't be undefined, null. When in\n * strict mode, the detected value cann't be undefined, null, empty-string,\n * empty-object or empty-array.\n */\n\nimport RestrictBase from './base';\nimport {\n  isNaN,\n  isEmpty,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictAnyRequired extends RestrictBase {\n  strict = false;\n\n  /**\n   * @param {Boolean} strict Whether to enable strict mode. By default, strict mode\n   * is disabled. If strict param is passed to exactly true, strict mode will be\n   * enabled.\n   */\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  /**\n   * Check the detected value whether meets this \"any-required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    const { strict } = this;\n\n    // In non-strict mode, if the detected value is undefined, null or NaN, the\n    // validation will be fail.\n    if (!strict && (isNotRequired(val) || isNaN(val))) {\n      throw this.getError('value is required and should not be undefined/null/NaN');\n    }\n\n    if (strict === true && isEmpty(val)) {\n      throw this.getError('value is required and should not be empty');\n    }\n  }\n}\n","/**\n * Restrict the detected value to be non-empty. Non-empty means undefined,\n * null. When in strict mode, non-empty means undefined, null, empty-string,\n * empty-object, empty-array.\n */\n\nimport RestrictBase from './base';\nimport { isEmpty, isNotRequired } from '../util/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  strict = false;\n\n  /**\n   * @param {Boolean} [strict] Whether enable strict mode. By default, the mode\n   * is non-strict. If you pass strict exactly true, it will enable strict mode.\n   */\n  constructor(strict) {\n    super();\n    this.strict = strict === true;\n  }\n\n  /**\n   * Check the detected value whether meets this \"required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    const { strict } = this;\n\n    if (strict && isEmpty(val)) {\n      throw this.getError('value is required and should not be empty');\n    }\n\n    if (!strict && isNotRequired(val))  {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n  }\n}\n","/**\n * Restrict value by a custom callback function.\n */\n\nimport { isFunction, isString } from '../util/is';\nimport RestrictBase from './base';\n\nexport default class RestrictCustom extends RestrictBase {\n  ctx = null;\n  restrictFn = null;\n\n  /**\n   * If restrictFn throws an error or returns a string, the validation\n   * will be fail. The message of error or the returned string respect\n   * the error message of validation.\n   *\n   * @param {Function} restrictFn The custom restrict callback function.\n   * @param {*}        [ctx]      The exec context of restrictFn.\n   */\n  constructor(restrictFn, ctx) {\n    super();\n\n    if (isFunction(restrictFn) === false) {\n      throw new TypeError('`restrictFn` should be a type of function');\n    }\n\n    this.restrictFn = restrictFn;\n    this.ctx = ctx;\n  }\n\n  /**\n   * Check the detected value whether meets this \"custom\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    try {\n      const result = this.restrictFn.call(this.ctx, val);\n\n      // If restrictFn return a non-empty string, validation will be fail.\n      if (isString(result) && result) {\n        throw this.getError(result);\n      }\n    } catch (error) {\n      // If restrictFn throws an error, validation will be fail too. And\n      // then should throw a wrapped error.\n      throw this.getError(error.message);\n    }\n\n    return true;\n  }\n}\n","import {\n  isString,\n  isStringNumber,\n} from '../util/is';\nimport { TYPE } from '../util/constants';\nimport RestrictNumberSchema from '../restrict/number-schema';\nimport RestrictNumberRequired from '../restrict/number-required';\nimport RestrictEnum from '../restrict/enum';\nimport RestrictNumberMax from '../restrict/number-max';\nimport RestrictNumberMin from '../restrict/number-min';\nimport RestrictNumberInt from '../restrict/number-int';\nimport RestrictNumberEven from '../restrict/number-even';\nimport RestrictNumberOdd from '../restrict/number-odd';\nimport SchemaBase from './base';\n\nexport default class SchemaNumber extends SchemaBase {\n  type = TYPE.number;\n  isAllowString = false;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictNumberSchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Set the default return value of validate when the detected value is empty.\n   *\n   * @param {*} args[0] The default return value.\n   * @param {*} args[1] The execute context of value when value is a function.\n   */\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('default arguments should not be empty');\n    }\n\n    const [value, ctx] = args;\n\n    this.defaultConfig = {\n      ctx,\n      value,\n      enable: true,\n      strict: false,\n    };\n\n    return this;\n  }\n\n  /**\n   * Add an \"enum\" restrict to boolean schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"required\" restrict to number schema.\n   */\n  required() {\n    this.requiredRestrict = new RestrictNumberRequired();\n    this.lastRestrict = this.requiredRestrict;\n    return this;\n  }\n\n  /**\n   * By default, number schema doesn't allow the detected value to be NaN. If\n   * allowNaN method is called, then NaN will be allowd.\n   */\n  allowNaN() {\n    this.typeRestrict.enableAllowNaN();\n    return this;\n  }\n\n  /**\n   * By default, number schema doesn't allow the detected value to be Infinity.\n   * If allowInfinity method is called, then Infinity will be allowd.\n   */\n  allowInfinity() {\n    this.typeRestrict.enableAllowInfinity();\n    return this;\n  }\n\n  /**\n   * By default, number schema doesn't allow the detected value to be number\n   * style string. For example, a string \"123\" is not allowed. If allowString\n   * method is called, then number schema will try to parse string to number.\n   */\n  allowString() {\n    this.isAllowString = true;\n    return this;\n  }\n\n  /**\n   * Add a \"min-number\" restrict for detected number.\n   *\n   * @param {Number}  min      The min value of detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the value of the detected number can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  min(min, closed) {\n    const restrict = new RestrictNumberMin(min, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"max-number\" restrict to number schema.\n   *\n   * @param {Number}  max      The max value of detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the value of the detected number can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  max(max, closed) {\n    const restrict = new RestrictNumberMax(max, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add an \"int-number\" restrict to number schema.\n   */\n  int() {\n    const restrict = new RestrictNumberInt();\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  even() {\n    const restrict = new RestrictNumberEven();\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  odd() {\n    const restrict = new RestrictNumberOdd();\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * @override\n   * Validate value.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    let value = val;\n\n    // If allowString is called, then preparse string to number.\n    if (\n      this.isAllowString\n      && isString(val)\n      && isStringNumber(val)\n    ) {\n      value = Number(val);\n    }\n\n    return super.validate(value);\n  }\n}\n","/**\n * Restrict value to be type of number.\n */\n\nimport RestrictBase from './base';\nimport {\n  isNaN,\n  isNumber,\n  isInfinity,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictNumberSchema extends RestrictBase {\n  // Whether the detected number is allowed to be NaN. By default, it's not allowd.\n  isAllowNaN = false;\n  // Whether the detected number is allowed to be Infinity or -Infinity, By default,\n  // is't not allowd.\n  isAllowInfinity = false;\n\n  /**\n   * Allow the detected number to be NaN.\n   */\n  enableAllowNaN() {\n    this.isAllowNaN = true;\n  }\n\n  /**\n   * Allow the detected number to be Infinity or -Infinity.\n   */\n  enableAllowInfinity() {\n    this.isAllowInfinity = true;\n  }\n\n  /**\n   * Check the detected value whether meets this \"number-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    const { isAllowNaN, isAllowInfinity } = this;\n\n    if (isNaN(val) && !isAllowNaN) {\n      throw this.getError('value is not allowed to be NaN');\n    }\n\n    if (isInfinity(val) && !isAllowInfinity) {\n      throw this.getError('value is not allowed to be Infinity');\n    }\n\n    if (!isNumber(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of number');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number is non-empty,\n * which means it's not undefined, null or NaN. This is differet from\n * the \"required\" strict, the \"required\" strict is for non-number value.\n */\n\nimport RestrictBase from './base';\nimport { isNaN, isNotRequired } from '../util/is';\n\nexport default class RestrictRequired extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"number-required\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (isNotRequired(val)) {\n      throw this.getError('value is required and should not be undefined/null');\n    }\n\n    // If required restrict is added for number schema, then the detected value\n    // cann't be NaN.\n    if (isNaN(val)) {\n      throw this.getError('value is required and should not be NaN');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the max value of the detected number.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictNumberMax extends RestrictBase {\n  /**\n   * @param {Number}  max      The max value of the detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the\n   * interval is closed, which means the detected number can be equal to max.\n   * When closed is exactly false, the interval will be opened.\n   */\n  constructor(max, closed) {\n    super();\n\n    if (isNumber(max) === false) {\n      throw new TypeError('`max` should be a type of number');\n    }\n\n    this.max = max;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"number-max\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val > this.max) {\n      throw this.getError(`value should be less than or equal to ${this.max}`);\n    }\n\n    if (!this.closed && val >= this.max) {\n      throw this.getError(`value should be less than ${this.max}`);\n    }\n  }\n}\n","/**\n * This is for number, to restrict the min value of the detected number.\n */\n\nimport RestrictBase from './base';\nimport { isNumber } from '../util/is';\n\nexport default class RestrictNumberMin extends RestrictBase {\n  /**\n   * @param {Number}  min      The min value of the detected number.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the\n   * interval is closed, which means the detected number can be equal to min.\n   * When closed is exactly false, the interval will be opened.\n   */\n  constructor(min, closed) {\n    super();\n\n    if (isNumber(min) === false) {\n      throw new TypeError('`min` should be a type of number');\n    }\n\n    this.min = min;\n    this.closed = closed !== false;\n  }\n\n  /**\n   * Check the detected value whether meets this \"number-min\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (this.closed && val < this.min) {\n      throw this.getError(`value should be greater than or equal to ${this.min}`);\n    }\n\n    if (!this.closed && val <= this.min) {\n      throw this.getError(`value should be greater than ${this.min}`);\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number to be\n * an integer.\n */\n\nimport RestrictBase from './base';\nimport { isInt } from '../util/is';\n\nexport default class RestrictNumberInt extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"number-int\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (isInt(val) === false) {\n      throw this.getError('value should be an integer');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number to be an even integer.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictNumberEven extends RestrictBase {\n  /**\n   * Check the detected number whether meets this \"number-even\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (val % 2 !== 0) {\n      throw this.getError('value should be an even integer');\n    }\n  }\n}\n","/**\n * This is for number, to restrict the detected number to be an odd integer.\n */\n\nimport RestrictBase from './base';\n\nexport default class RestrictNumberOdd extends RestrictBase {\n  /**\n   * Check the detected number whether meets this \"number-odd\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (Math.abs(val) % 2 !== 1) {\n      throw this.getError('value should be an odd integer');\n    }\n  }\n}\n","import { TYPE } from '../util/constants';\nimport RestrictStringSchema from '../restrict/string-schema';\nimport RestrictEnum from '../restrict/enum';\nimport RestrictLengthMax from '../restrict/length-max';\nimport RestrictLengthMin from '../restrict/length-min';\nimport RestrictStringPattern from '../restrict/string-pattern';\nimport SchemaBase from './base';\n\nexport default class SchemaString extends SchemaBase {\n  type = TYPE.string;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictStringSchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Add an \"enum\" restrict to string schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"min-length\" restrict to string schema.\n   *\n   * @param {Number}  min      The min length of detected string.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected string can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  min(min, closed) {\n    const restrict = new RestrictLengthMin(min, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"max-length\" restrict to string schema.\n   *\n   * @param {Number}  max      The max length of detected string.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected string can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  max(max, closed) {\n    const restrict = new RestrictLengthMax(max, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"pattern\" string to string schema.\n   *\n   * @param {RegExp} pattern RegExp to restrict the format of string.\n   */\n  pattern(pattern) {\n    const restrict = new RestrictStringPattern(pattern);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n}\n","/**\n * Restrict value to be type of string.\n */\n\nimport RestrictBase from './base';\nimport {\n  isString,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictStringSchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"string-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (!isString(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of string');\n    }\n  }\n}\n","/**\n * Restrict string format by a regular expression.\n */\n\nimport RestrictBase from './base';\nimport { isRegExp } from '../util/is';\n\nexport default class RestrictStringPattern extends RestrictBase {\n  pattern = null;\n\n  /**\n   * @param {RegExp} pattern The regular expression to restrict the format of string.\n   */\n  constructor(pattern) {\n    super();\n\n    if (isRegExp(pattern) === false) {\n      throw new TypeError('pattern should be an RegExp');\n    }\n\n    this.pattern = pattern;\n  }\n\n  /**\n   * Check the detected value whether meets this \"string-pattern\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (!this.pattern.test(val)) {\n      throw this.getError(`value should match pattern ${this.pattern.toString()}`);\n    }\n  }\n}\n","import { TYPE } from '../util/constants';\nimport RestrictBooleanSchema from '../restrict/boolean-schema';\nimport RestrictEnum from '../restrict/enum';\nimport SchemaBase from './base';\n\nexport default class SchemaBoolean extends SchemaBase {\n  type = TYPE;\n\n  constructor() {\n    super();\n    this.typeRestrict = new RestrictBooleanSchema();\n    this.lastRestrict = this.typeRestrict;\n  }\n\n  /**\n   * Add an \"enum\" restrict to boolean schema.\n   *\n   * @param {Array<*>} values The enum values that restrict the detected value can be.\n   */\n  enum(...values) {\n    const restrict = new RestrictEnum(...values);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Set the default return value of validate when the detected value is empty.\n   *\n   * @param {*} args[0] The default return value.\n   * @param {*} args[1] The execute context of value when value is a function.\n   */\n  default(...args) {\n    if (args.length === 0) {\n      throw new Error('default arguments should not be empty');\n    }\n\n    const [value, ctx] = args;\n\n    this.defaultConfig = {\n      ctx,\n      value,\n      enable: true,\n      strict: false,\n    };\n\n    return this;\n  }\n}\n","/**\n * Restrict value to be type of boolean.\n */\n\nimport RestrictBase from './base';\nimport {\n  isBoolean,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictBooleanSchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"boolean-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    // When the detected value isn't boolean, null or undefined, validation\n    // will be fail. Otherwise, validation will be success.\n    if (!isBoolean(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of boolean');\n    }\n  }\n}\n","import {\n  isObject,\n  isNotRequired,\n} from '../util/is';\nimport {\n  TYPE,\n  useKeyChainSymbol,\n} from '../util/constants';\nimport getKeyStr from '../util/get-key-str';\nimport RestrictObjectSchema from '../restrict/object-schema';\nimport ValidateError from '../util/validate-error';\nimport SchemaBase from './base';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport default class SchemaObject extends SchemaBase {\n  type = TYPE.object;\n  config = null;\n  isStripUnknown = false;\n  isAllowUnknown = false;\n\n  constructor(config) {\n    super();\n    this.typeRestrict = new RestrictObjectSchema();\n    this.lastRestrict = this.typeRestrict;\n\n    // If config is passed non-object, it means that the key-value structure\n    // is no need to restrct.\n    if (isObject(config)) {\n      const pureConfig = {};\n\n      // Filter the keys that corresponding value is an instance of SchemaBase.\n      // This is for the purpose that allow config include value that is not an\n      // instance of SchemaBase, and ingore them.\n      Object.keys(config).forEach((key) => {\n        if (config[key] instanceof SchemaBase) {\n          pureConfig[key] = config[key];\n        }\n      });\n      this.config = pureConfig;\n    }\n  }\n\n  /**\n   * If stripUnkown is called, then the return result of validate method will\n   * not include the keys that not included in config.\n   */\n  stripUnknown() {\n    this.isStripUnknown = true;\n    return this;\n  }\n\n  /**\n   * By default, the detected object is not allowed to include the unknown keys\n   * that is not included in config. If allowUnknown is called, then these\n   * unknown keys will be allowed, and these unknown key-values will be returned\n   * in validate result.\n   */\n  allowUnknown() {\n    this.isAllowUnknown = true;\n    return this;\n  }\n\n  /**\n   * Validate value.\n   *\n   * @param {*}      obj         The value to validate.\n   * @param {Symbol} useKeyChain If pass the special symbol, the keyChain param\n   * will be used.\n   * @param {Array}  keyChain    The passed key chain of parent keys.\n   */\n  validate(obj, useKeyChain, keyChain) {\n    // When it's not required, and the detected value is undefined or null,\n    // then it's no need to validate any more, just return default value or\n    // default value after formated.\n    if (!this.requiredRestrict && isNotRequired(obj)) {\n      return this.getReturnValue(obj);\n    }\n\n    try {\n      this.checkType(obj);\n      this.checkRequired(obj);\n      this.checkRestricts(obj);\n\n      return this.getReturnValue(this.validateByRecurse(\n        obj,\n        useKeyChain === useKeyChainSymbol ? keyChain : undefined,\n      ));\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const errorForAll = this.getErrorForAll(error.message);\n\n      if (errorForAll) {\n        throw errorForAll;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * @private\n   * Traverse each key of the object and validate each value recursively.\n   *\n   * @param {Array} obj           The detected object.\n   * @param {Array} [keyChain=[]] The key chain of ancestors to give friendly\n   * error prompts.\n   * @returns {Object}            The return value if validate pass.\n   */\n  validateByRecurse(obj, keyChain = []) {\n    if (this.config === null) {\n      return obj;\n    }\n\n    const result = {};\n    const chain = keyChain;\n    const keys = Object.keys(this.config);\n\n    keys.forEach((key) => {\n      const schema = this.config[key];\n\n      if (!schema.requiredRestrict && !hasOwnProperty.call(obj, key)) {\n        this.setResultWhenDefaultEnabled({\n          key,\n          result,\n        });\n      } else {\n        result[key] = this.validateObjectByKey(obj, {\n          key,\n          chain,\n        });\n      }\n    });\n    if (!this.isStripUnknown) {\n      Object\n        .keys(obj)\n        .forEach((key) => {\n          const notIncluded = keys.includes(key) === false;\n\n          if (notIncluded && !this.isAllowUnknown) {\n            throw new ValidateError(`the key \\`${key}\\` is not allowed`);\n          }\n\n          if (notIncluded) {\n            result[key] = obj[key];\n          }\n        });\n    }\n    return result;\n  }\n\n  /**\n   * @private\n   * Validate an key-value of the detected object.\n   *\n   * @param {object} obj            The detected object.\n   * @param {object} options\n   * @param {string} options.key    The prop key.\n   * @param {array}  options.chain  The key chain of ancestors to give friendly\n   * error prompts.\n   */\n  validateObjectByKey(obj, options) {\n    const { key, chain } = options;\n    const schema = this.config[key];\n    const keyOption = { key, type: 'prop' };\n\n    try {\n      return schema.validate(\n        obj[key],\n        useKeyChainSymbol,\n        [\n          ...chain,\n          keyOption,\n        ],\n      );\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const keyChainStr = `\"${getKeyStr([...chain, keyOption])}\": `;\n\n      throw new ValidateError(\n        `${keyChainStr}${error.message}`,\n        { final: true },\n      );\n    }\n  }\n\n  /**\n   * @private\n   * Set some key-values of return value when default method was called.\n   *\n   * @param {object} params\n   * @param {string} params.key    The prop key.\n   * @param {object} params.result The value that will be returned.\n   * @returns {void}\n   */\n  setResultWhenDefaultEnabled(params) {\n    const { key, result } = params;\n\n    const schema = this.config[key];\n    if (schema.defaultConfig.enable) {\n      result[key] = schema.getDefaultReturnValue(undefined);\n    }\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Restrict value to be type of object.\n */\n\nimport RestrictBase from './base';\nimport {\n  isObject,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictObjectSchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"object-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    if (isObject(val) || isNotRequired(val)) {\n      return true;\n    }\n\n    throw this.getError('value should be a type of object');\n  }\n}\n","/**\n * Class for array schema.\n */\n\nimport {\n  isNotRequired,\n} from '../util/is';\nimport {\n  TYPE,\n  useKeyChainSymbol,\n} from '../util/constants';\nimport getKeyStr from '../util/get-key-str';\nimport ValidateError from '../util/validate-error';\nimport RestrictArraySchema from '../restrict/array-schema';\nimport RestrictLengthMin from '../restrict/length-min';\nimport RestrictLengthMax from '../restrict/length-max';\nimport SchemaBase from './base';\n\nexport default class SchemaArray extends SchemaBase {\n  type = TYPE.array;\n  itemSchema = null;\n\n  /**\n   * @param {SchemaBase} itemSchema The schema defined for every item of array.\n   * If itemSchema isn't instanceof SchemaBase, then it will be ignored, this\n   * means that the detected array can include any type value.\n   */\n  constructor(itemSchema) {\n    super();\n    this.typeRestrict = new RestrictArraySchema();\n    this.lastRestrict = this.typeRestrict;\n\n    // Only handle itemSchema when it's instanceof SchemaBase.\n    if (itemSchema instanceof SchemaBase) {\n      this.itemSchema = itemSchema;\n    }\n  }\n\n  /**\n   * Add a \"min-length\" restrict to array schema.\n   *\n   * @param {Number}  min      The min length of detected array.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected array can be equal to min. When\n   * closed is exactly false, the interval will be opened.\n   */\n  min(min, closed) {\n    const restrict = new RestrictLengthMin(min, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Add a \"max-length\" restrict to array schema.\n   *\n   * @param {Number}  max      The max length of detected array.\n   * @param {Boolean} [closed] Whether it's a closed interval. By default, the interval\n   * is closed, which means the length of the detected array can be equal to max. When\n   * closed is exactly false, the interval will be opened.\n   */\n  max(max, closed) {\n    const restrict = new RestrictLengthMax(max, closed);\n\n    this.restricts.push(restrict);\n    this.lastRestrict = restrict;\n    return this;\n  }\n\n  /**\n   * Validate value.\n   *\n   * @param {*}      array       The value to validate.\n   * @param {Symbol} useKeyChain If pass the special symbol, the keyChain param will be used.\n   * @param {Array}  keyChain    The passed key chain of parent keys.\n   */\n  validate(array, useKeyChain, keyChain) {\n    // When it's not required, and the detected value is undefined or null, then it's no need\n    // to validate any more, just return default value or default value after formated.\n    if (!this.requiredRestrict && isNotRequired(array)) {\n      return this.getReturnValue(array);\n    }\n\n    try {\n      this.checkType(array);\n      this.checkRequired(array);\n      this.checkRestricts(array);\n\n      return this.getReturnValue(this.validateByRecurse(\n        array,\n        useKeyChain === useKeyChainSymbol ? keyChain : undefined,\n      ));\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const errorForAll = this.getErrorForAll(error.message);\n\n      if (errorForAll) {\n        throw errorForAll;\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * @private\n   * Traverse each item of the array and validate each member recursively.\n   *\n   * @param {Array} array         The detected array.\n   * @param {Array} [keyChain=[]] The key chain of ancestors to give friendly error prompts.\n   * @returns {Array}             The return value if validate pass.\n   */\n  validateByRecurse(array, keyChain = []) {\n    const chain = keyChain;\n    const { itemSchema } = this;\n\n    if (itemSchema) {\n      return array.map((_, index) => this.validateItem({\n        index,\n        array,\n        chain,\n      }));\n    }\n\n    // Return a shallow copy of the detected array.\n    return [...array];\n  }\n\n  /**\n   * @private\n   * Validate an item of the detected array.\n   *\n   * @param {object} params\n   * @param {number} params.index  The index of the item in array.\n   * @param {array}  params.array  The detected array.\n   * @param {array}  params.chain  The key chain of ancestors.\n   */\n  validateItem(params) {\n    const {\n      index,\n      array,\n      chain,\n    } = params;\n    const { itemSchema } = this;\n\n    try {\n      return itemSchema.validate(\n        array[index],\n        useKeyChainSymbol,\n        [...chain, { type: 'index', key: index }],\n      );\n    } catch (error) {\n      this.throwErrorWithoutKeyChainIfNeeded(error);\n      const keyOption = {\n        type: 'index',\n        key: index,\n      };\n      const keyChainStr = `\"${getKeyStr([...chain, keyOption])}\": `;\n\n      throw new ValidateError(\n        `${keyChainStr}${error.message}`,\n        { final: true },\n      );\n    }\n  }\n}\n","/**\n * Restrict value to be type of array.\n */\n\nimport RestrictBase from './base';\nimport {\n  isArray,\n  isNotRequired,\n} from '../util/is';\n\nexport default class RestrictArraySchema extends RestrictBase {\n  /**\n   * Check the detected value whether meets this \"array-schema\" restrict.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    // When the detected value isn't array, null or undefined, validation\n    // will be fail. Otherwise, validation will be success.\n    if (!isArray(val) && !isNotRequired(val)) {\n      throw this.getError('value should be a type of array');\n    }\n  }\n}\n","/**\n * Mixed schema, it means you can combine several schemas into one schema.\n */\n\nimport SchemaBase from './base';\n\nexport default class SchemaMixed extends SchemaBase {\n  schemas = null;\n\n  /**\n   * @param {Array<SchemaBase>} schemas The allowed schemas.\n   */\n  constructor(...schemas) {\n    super();\n\n    if (schemas.length === 0) {\n      throw new RangeError('mixed arguments should not be empty');\n    }\n\n    this.schemas = schemas;\n  }\n\n  /**\n   * Validate value.\n   *\n   * @param {*} val The detected value.\n   */\n  validate(val) {\n    let finalError = null;\n\n    for (let i = 0; i < this.schemas.length; i += 1) {\n      try {\n        return this.schemas[i].validate(val);\n      } catch (error) {\n        finalError = error;\n      }\n    }\n\n    throw finalError;\n  }\n}\n"],"sourceRoot":""}